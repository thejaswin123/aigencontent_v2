{"version":3,"file":"js/settings.236d1915.js","mappings":"yHAKM,SAAUA,EAAWC,GACzB,OACEA,IACgB,YAAdA,EAAKC,QAAwBD,EAAKE,aACnB,aAAdF,EAAKC,QAAyBD,EAAKG,QACrB,UAAdH,EAAKC,QAAsBD,EAAKI,aAClB,SAAdJ,EAAKC,QAAqBD,EAAKK,YACjB,WAAdL,EAAKC,QAAuBD,EAAKM,cACnB,WAAdN,EAAKC,KAEZ,CAEM,SAAUM,EAAaC,GAC3B,MAAY,KAARA,GAGGC,MAAMC,OAAOF,IAFX,EAEuBE,OAAOF,EACzC,C,oRCpBO,MAAMG,EAA6B,CACxCC,GAAI,UACJC,GAAI,UACJC,GAAI,WACJC,GAAI,UACJC,GAAI,WACJC,GAAI,YACJC,GAAI,SACJC,GAAI,UACJ,QAAS,OACT,QAAS,OACTC,GAAI,MACJC,GAAI,MACJC,GAAI,UACJC,GAAI,aACJC,GAAI,UACJC,GAAI,QACJC,GAAI,QACJC,GAAI,QACJC,GAAI,SACJC,GAAI,SACJC,GAAI,WACJC,GAAI,QACJC,GAAI,SACJC,GAAI,mBACJC,GAAI,gBACJC,GAAI,MACJC,GAAI,aACJC,GAAI,aACJC,GAAI,YACJC,GAAI,UACJC,GAAI,SACJC,GAAI,aACJC,GAAI,cACJC,GAAI,WACJC,GAAI,SACJC,GAAI,QACJC,GAAI,UACJC,GAAI,QACJC,GAAI,QACJC,GAAI,QACJC,GAAI,SACJC,GAAI,QAIOC,EAAiC,CAC5C,SAAU,SACV,UAAW,gBACX,qBAAsB,qBACtB,cAAe,oBACf,mBAAoB,yBACpB,mBAAoB,mBACpBC,KAAM,QACN,cAAe,cACf,qBAAsB,qBACtB,YAAa,aACb,WAAY,YACZ,gBAAiB,kBAINC,EAAwC,CACnDC,QAAS,8BACT,eAAgB,qCAChB,aAAc,QAIHC,EAAwC,CACnD,iBAAkB,kBAIPC,EAA0C,CACrD,aAAc,aACd,mBAAoB,mBACpB,iBAAkB,yBAIPC,EAA0C,CACrDC,OAAQ,SACRC,OAAQ,SACRC,KAAM,OACNC,UAAW,YACXC,QAAS,UACT,oBAAqB,oBACrB,aAAc,aACd,aAAc,aACd,WAAY,WACZ,WAAY,WACZC,KAAM,OACNC,UAAW,YACX,YAAa,YACb,iBAAkB,iBAClBC,MAAO,QACPC,UAAW,YACXC,GAAI,KACJC,SAAU,WACV,cAAe,cACfC,IAAK,MACL,cAAe,cACf,cAAe,cACf,YAAa,YACbC,OAAQ,UAGH,IAAKC,GAAZ,SAAYA,GAEVA,EAAA,aACAA,EAAA,iCACAA,EAAA,iCACAA,EAAA,2BAEAA,EAAA,uBACAA,EAAA,6BAEAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,6BACAA,EAAA,yBACAA,EAAA,uBAEAA,EAAA,6BACAA,EAAA,uCACAA,EAAA,6CACAA,EAAA,mCACAA,EAAA,uCAEAA,EAAA,2BACAA,EAAA,qCACAA,EAAA,iCACAA,EAAA,qCACAA,EAAA,yBAEAA,EAAA,+BACAA,EAAA,qCACAA,EAAA,yCACAA,EAAA,6BAEAA,EAAA,mCACAA,EAAA,6BACAA,EAAA,yCAEAA,EAAA,6BACAA,EAAA,iBACAA,EAAA,6CACAA,EAAA,gCACD,EAzCD,CAAYA,IAAAA,EAAe,KA2CpB,MAAMC,EAAgB,CAC3BC,UAAW,CACTC,OAASC,GAAqB,aAAaA,iDAC3CC,KAAMA,CAACC,EAAcF,IAAqB,2JACqCA,+HAEjEA,6MAGHA,iCACaE,KAE1BC,OAAQ,CACNJ,OAASC,GAAqB,gDAAgDA,IAC9EC,KAAMA,CAACC,EAAcF,IAAqB,yPAGNA,4GACUE,KAEhDE,SAAU,CACRL,OAASC,GAAqB,oDAAoDA,IAClFC,KAAMA,CAACC,EAAcF,IAAqB,4MAE5BA,gOAGgCE,KAEhDG,QAAS,CACPN,OAASC,GAAqB,0CAA0CA,IACxEC,KAAMA,CAACC,EAAcF,IAAqB,6PAG7BA,kDAAyDE,KAExEI,QAAS,CACPP,OAASC,GAAqB,0GAA0GA,IACxIC,KAAMA,CAACC,EAAcF,IAAqB,iyBAG7BA,kDAAyDE,K,qJC/L1E,MAAMK,EAAa,CAAElD,GAAI,WASzB,OAA4BmD,EAAAA,EAAAA,IAAiB,CAC3CC,OAAQ,eACRC,KAAAA,CAAMC,GAER,MAAMC,GAASC,EAAAA,EAAAA,MAETC,EAAe,CACnB,CACEC,MAAO,UACPC,MAAO,MAET,CACED,MAAO,OACPC,MAAO,UAILC,EAAoBC,OAAOC,OAAOpF,EAAAA,IAAaqF,KAAKC,IAAG,CAC3DN,MAAOM,EACPL,MAAOK,MAGHC,EAAYJ,OAAOK,KAAK/C,EAAAA,IAAiB4C,KAAKC,IAAG,CACrDN,MAAOvC,EAAAA,GAAgB6C,GACvBL,MAAOxC,EAAAA,GAAgB6C,OAQnBG,GALeN,OAAOK,KAAK7C,EAAAA,GAAwB0C,KAAKC,IAAG,CAC/DN,MAAOM,EACPL,MAAOxC,EAAAA,GAAgB6C,OAGHH,OAAOK,KAAK3C,EAAAA,IAAwBwC,KAAKC,IAAG,CAChEN,MAAOM,EACPL,MAAOpC,EAAAA,GAAuByC,QAG1BI,EAAkBP,OAAOK,KAAK1C,EAAAA,GAA0BuC,KAAKC,IAAG,CACpEN,MAAOM,EACPL,MAAOnC,EAAAA,EAAyBwC,OAG5BK,EAAkBR,OAAOK,KAAKzC,EAAAA,IAA0BsC,KAAKC,IAAG,CACpEN,MAAOM,EACPL,MAAOlC,EAAAA,GAAyBuC,OAG5BM,GAAMC,EAAAA,EAAAA,IAAqE,YAC3EC,GAAoBD,EAAAA,EAAAA,IAAI,MACxBE,GAAgBF,EAAAA,EAAAA,IAAI,WAEpBtG,GAAcsG,EAAAA,EAAAA,IAAI,IAClBG,GAAWH,EAAAA,EAAAA,IAAI,WAEfI,GAAQJ,EAAAA,EAAAA,IAAIpD,EAAAA,GAAgB,YAC5BjD,GAASqG,EAAAA,EAAAA,IAAI,IACbK,GAAcL,EAAAA,EAAAA,IAAI,IAClBM,GAAYN,EAAAA,EAAAA,IAAI,KAChBO,GAAWP,EAAAA,EAAAA,IAAI,IAEfpG,GAAcoG,EAAAA,EAAAA,IAAI,IAClBQ,GAAmBR,EAAAA,EAAAA,IAAI,IACvBS,GAAsBT,EAAAA,EAAAA,IAAI,IAC1BU,GAAiBV,EAAAA,EAAAA,IAAI,KACrBW,GAAmBX,EAAAA,EAAAA,IAAI,IAEvBnG,GAAamG,EAAAA,EAAAA,IAAI,IACjBY,GAAkBZ,EAAAA,EAAAA,IAAI,qDACtBa,GAAYb,EAAAA,EAAAA,IAAIhD,EAAAA,GAAuB,mBACvC8D,GAAkBd,EAAAA,EAAAA,IAAI,IACtBe,GAAgBf,EAAAA,EAAAA,IAAI,KAEpBlG,GAAekG,EAAAA,EAAAA,IAAI,IACnBgB,GAAchB,EAAAA,EAAAA,IAAI/C,EAAAA,EAAyB,eAC3CgE,GAAoBjB,EAAAA,EAAAA,IAAI,IACxBkB,GAAkBlB,EAAAA,EAAAA,IAAI,KAEtBmB,GAAiBnB,EAAAA,EAAAA,IAAI,IACrBoB,GAAcpB,EAAAA,EAAAA,IAAI9C,EAAAA,GAAyBE,QAC3CiE,GAAoBrB,EAAAA,EAAAA,IAAI,IAExBsB,EAAU,CACd,CACEnC,MAAO,WACPC,MAAO,YAET,CACED,MAAO,QACPC,MAAO,SAET,CACED,MAAO,OACPC,MAAO,QAET,CACED,MAAO,SACPC,MAAO,UAET,CACED,MAAO,SACPC,MAAO,YAIL,OAAEmC,IAAWC,EAAAA,EAAAA,MAMnB,SAASC,IAEP1B,EAAIX,MAAQsC,aAAaC,QAAQ3D,EAAAA,GAAgB+B,MAA0E,WAC3HE,EAAkBb,MAAQsC,aAAaC,QAAQ3D,EAAAA,GAAgB4D,gBAAkB,KACjF1B,EAAcd,MAAQsC,aAAaC,QAAQ3D,EAAAA,GAAgBkC,gBAAkB,UAE7ExG,EAAY0F,MAAQsC,aAAaC,QAAQ3D,EAAAA,GAAgBtE,cAAgB,GACzEyG,EAASf,MAAQsC,aAAaC,QAAQ3D,EAAAA,GAAgBmC,WAAa,UAEnExG,EAAOyF,MAAQsC,aAAaC,QAAQ3D,EAAAA,GAAgBrE,SAAW,GAC/D,MAAMkI,EAAYH,aAAaC,QAAQ3D,EAAAA,GAAgBoC,QAAUxD,EAAAA,GAAgB,WAC7E0C,OAAOK,KAAK/C,EAAAA,IAAiBkF,SAASD,GACxCzB,EAAMhB,MAAQxC,EAAAA,GAAgBiF,GACrBvC,OAAOC,OAAO3C,EAAAA,IAAiBkF,SAASD,GACjDzB,EAAMhB,MAAQyC,EAEdzB,EAAMhB,MAAQxC,EAAAA,GAAgB,WAEhCyD,EAAYjB,OAAQrF,EAAAA,EAAAA,GAAY2H,aAAaC,QAAQ3D,EAAAA,GAAgBqC,eAAiB,GACtFC,EAAUlB,OAAQrF,EAAAA,EAAAA,GAAY2H,aAAaC,QAAQ3D,EAAAA,GAAgBsC,aAAe,IAClFC,EAASnB,MAAQsC,aAAaC,QAAQ3D,EAAAA,GAAgBuC,WAAa,GAEnE3G,EAAYwF,MAAQsC,aAAaC,QAAQ3D,EAAAA,GAAgBpE,cAAgB,GACzE4G,EAAiBpB,MAAQsC,aAAaC,QAAQ3D,EAAAA,GAAgBwC,mBAAqB,GACnFC,EAAoBrB,MAAQsC,aAAaC,QAAQ3D,EAAAA,GAAgByC,sBAAwB,GACzFC,EAAetB,OAAQrF,EAAAA,EAAAA,GAAY2H,aAAaC,QAAQ3D,EAAAA,GAAgB0C,kBAAoB,IAC5FC,EAAiBvB,OAAQrF,EAAAA,EAAAA,GAAY2H,aAAaC,QAAQ3D,EAAAA,GAAgB2C,oBAAsB,GAEhG9G,EAAWuF,MAAQsC,aAAaC,QAAQ3D,EAAAA,GAAgBnE,aAAe,GACvE+G,EAAgBxB,MAAQsC,aAAaC,QAAQ3D,EAAAA,GAAgB4C,kBAAoB,oDACjFG,EAAc3B,OAAQrF,EAAAA,EAAAA,GAAY2H,aAAaC,QAAQ3D,EAAAA,GAAgB+C,iBAAmB,IAC1FD,EAAgB1B,OAAQrF,EAAAA,EAAAA,GAAY2H,aAAaC,QAAQ3D,EAAAA,GAAgB8C,mBAAqB,GAC9F,MAAMiB,EAAgBL,aAAaC,QAAQ3D,EAAAA,GAAgB6C,YAAc7D,EAAAA,GAAuB,kBAC5FsC,OAAOK,KAAK3C,EAAAA,IAAwB8E,SAASC,GAC/ClB,EAAUzB,MAAQpC,EAAAA,GAAuB+E,GAChCzC,OAAOC,OAAOvC,EAAAA,IAAwB8E,SAASC,GACxDlB,EAAUzB,MAAQ2C,EAElBlB,EAAUzB,MAAQpC,EAAAA,GAAuB,kBAG3ClD,EAAasF,MAAQsC,aAAaC,QAAQ3D,EAAAA,GAAgBlE,eAAiB,GAC3EoH,EAAgB9B,OAAQrF,EAAAA,EAAAA,GAAY2H,aAAaC,QAAQ3D,EAAAA,GAAgBkD,mBAAqB,IAC9FD,EAAkB7B,OAAQrF,EAAAA,EAAAA,GAAY2H,aAAaC,QAAQ3D,EAAAA,GAAgBiD,qBAAuB,GAClG,MAAMe,EAAkBN,aAAaC,QAAQ3D,EAAAA,GAAgBgD,cAAgB/D,EAAAA,EAAyB,cAClGqC,OAAOK,KAAK1C,EAAAA,GAA0B6E,SAASE,GACjDhB,EAAY5B,MAAQnC,EAAAA,EAAyB+E,GACpC1C,OAAOC,OAAOtC,EAAAA,GAA0B6E,SAASE,GAC1DhB,EAAY5B,MAAQ4C,EAEpBhB,EAAY5B,MAAQnC,EAAAA,EAAyB,cAG/CkE,EAAe/B,MAAQsC,aAAaC,QAAQ3D,EAAAA,GAAgBmD,iBAAmB,GAC/E,MAAMc,EAAkBP,aAAaC,QAAQ3D,EAAAA,GAAgBoD,cAAgBlE,EAAAA,GAAyBE,OAClGkC,OAAOK,KAAKzC,EAAAA,IAA0B4E,SAASG,GACjDb,EAAYhC,MAAQlC,EAAAA,GAAyB+E,GACpC3C,OAAOC,OAAOrC,EAAAA,IAA0B4E,SAASG,GAC1Db,EAAYhC,MAAQ6C,EAEpBb,EAAYhC,MAAQlC,EAAAA,GAAyBE,OAE/CiE,EAAkBjC,OAAQrF,EAAAA,EAAAA,GAAY2H,aAAaC,QAAQ3D,EAAAA,GAAgBqD,qBAAuB,EACpG,CAIA,SAASa,EAAiBlI,GACxB0H,aAAaS,QAAQnE,EAAAA,GAAgB+B,IAAK/F,EAC5C,CAEA,SAASoI,EAA2BpI,GAClCuH,EAAOnC,MAAQpF,EACf0H,aAAaS,QAAQnE,EAAAA,GAAgB4D,cAAe5H,EACtD,CAEA,SAASqI,EAA2BrI,GAClC0H,aAAaS,QAAQnE,EAAAA,GAAgBkC,cAAelG,EACtD,CAMA,SAASsI,EAAmBtI,GAC1B0H,aAAaS,QAAQnE,EAAAA,GAAgBoC,MAAOpG,EAC9C,CAEA,SAASuI,IACPb,aAAaS,QAAQnE,EAAAA,GAAgBrE,OAAQA,EAAOyF,MACtD,CAEA,SAASoD,IACPd,aAAaS,QAAQnE,EAAAA,GAAgBtE,YAAaA,EAAY0F,MAChE,CAEA,SAASqD,IACPf,aAAaS,QAAQnE,EAAAA,GAAgBuC,SAAUA,EAASnB,MAC1D,CAEA,SAASsD,IACPhB,aAAaS,QAAQnE,EAAAA,GAAgBqC,YAAaA,EAAYjB,MAAMuD,WACtE,CAEA,SAASC,KACPlB,aAAaS,QAAQnE,EAAAA,GAAgBsC,UAAWA,EAAUlB,MAAMuD,WAClE,CAEA,SAASE,KACPnB,aAAaS,QAAQnE,EAAAA,GAAgBpE,YAAaA,EAAYwF,MAChE,CAEA,SAAS0D,KACPpB,aAAaS,QAAQnE,EAAAA,GAAgBwC,iBAAkBA,EAAiBpB,MAC1E,CAEA,SAAS2D,KACPrB,aAAaS,QAAQnE,EAAAA,GAAgByC,oBAAqBA,EAAoBrB,MAChF,CAEA,SAAS4D,KACPtB,aAAaS,QAAQnE,EAAAA,GAAgB0C,eAAgBA,EAAetB,MAAMuD,WAC5E,CAEA,SAASM,KACPvB,aAAaS,QAAQnE,EAAAA,GAAgB2C,iBAAkBA,EAAiBvB,MAAMuD,WAChF,CAEA,SAASO,KACPxB,aAAaS,QAAQnE,EAAAA,GAAgBnE,WAAYA,EAAWuF,MAC9D,CAEA,SAAS+D,KACPzB,aAAaS,QAAQnE,EAAAA,GAAgB4C,gBAAiBA,EAAgBxB,MACxE,CAEA,SAASgE,KACP1B,aAAaS,QAAQnE,EAAAA,GAAgB+C,cAAeA,EAAc3B,MAAMuD,WAC1E,CAEA,SAASU,KACP3B,aAAaS,QAAQnE,EAAAA,GAAgB8C,gBAAiBA,EAAgB1B,MAAMuD,WAC9E,CAEA,SAASW,GAAuBtJ,GAC9B0H,aAAaS,QAAQnE,EAAAA,GAAgB6C,UAAW7G,EAClD,CAEA,SAASuJ,KACP7B,aAAaS,QAAQnE,EAAAA,GAAgBlE,aAAcA,EAAasF,MAClE,CAEA,SAASoE,KACP9B,aAAaS,QAAQnE,EAAAA,GAAgBkD,gBAAiBA,EAAgB9B,MAAMuD,WAC9E,CAEA,SAASc,KACP/B,aAAaS,QAAQnE,EAAAA,GAAgBiD,kBAAmBA,EAAkB7B,MAAMuD,WAClF,CAEA,SAASe,GAAyB1J,GAChC0H,aAAaS,QAAQnE,EAAAA,GAAgBgD,YAAahH,EACpD,CAEA,SAAS2J,KACPjC,aAAaS,QAAQnE,EAAAA,GAAgBmD,eAAgBA,EAAe/B,MACtE,CAEA,SAASwE,GAAyB5J,GAChC0H,aAAaS,QAAQnE,EAAAA,GAAgBoD,YAAapH,EACpD,CAEA,SAAS6J,KACPnC,aAAaS,QAAQnE,EAAAA,GAAgBqD,kBAAmBA,EAAkBjC,MAAMuD,WAClF,CAEA,SAASmB,KACP9E,EAAO+E,KAAK,IACd,CAGA,OAzLAC,EAAAA,EAAAA,KAAc,KACZvC,GAAU,IAwLL,CAACwC,EAAUC,KAChB,MAAMC,GAAoBC,EAAAA,EAAAA,IAAkB,UACtCC,GAAoBD,EAAAA,EAAAA,IAAkB,UACtCE,GAAuBF,EAAAA,EAAAA,IAAkB,aACzCG,GAAuBH,EAAAA,EAAAA,IAAkB,aACzCI,GAAuBJ,EAAAA,EAAAA,IAAkB,aACzCK,GAA0BL,EAAAA,EAAAA,IAAkB,gBAC5CM,GAAsBN,EAAAA,EAAAA,IAAkB,YACxCO,IAA6BP,EAAAA,EAAAA,IAAkB,mBAC/CQ,IAAqBR,EAAAA,EAAAA,IAAkB,WAE7C,OAAQS,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoB,MAAOnG,EAAY,EAC3DoG,EAAAA,EAAAA,IAAaZ,EAAmB,CAC9Ba,MAAO,aACPC,MAAO,SACPC,QAAS,SACTC,MAAO,CAAC,YAAY,OAAO,MAAQ,UAClC,CACDpI,SAASqI,EAAAA,EAAAA,KAAS,IAAM,EACtBC,EAAAA,EAAAA,KAAiBC,EAAAA,EAAAA,IAAiBrB,EAAKsB,GAAG,aAAc,MAE1DC,EAAG,KAELT,EAAAA,EAAAA,IAAaZ,EAAmB,CAC9Ba,MAAO,eACPG,MAAO,CAAC,aAAa,SACpB,CACDpI,SAASqI,EAAAA,EAAAA,KAAS,IAAM,EACtBL,EAAAA,EAAAA,IAAaV,EAAmB,CAC9BoB,KAAM,GACNC,OAAQ,KAEVX,EAAAA,EAAAA,IAAaZ,EAAmB,CAAEgB,MAAO,CAAC,MAAQ,OAAO,QAAU,OAAO,kBAAkB,SAAS,cAAc,SAAS,iBAAiB,WAAa,CACxJpI,SAASqI,EAAAA,EAAAA,KAAS,IAAM,EACtBL,EAAAA,EAAAA,IAAaT,EAAsB,CACjC7K,KAAM,UACNkM,MAAO,GACPC,MAAO,GACPT,MAAO,CAAC,gBAAgB,MAAM,MAAQ,QACtCU,QAAS/B,IACR,CACD/G,SAASqI,EAAAA,EAAAA,KAAS,IAAM,EACtBC,EAAAA,EAAAA,KAAiBC,EAAAA,EAAAA,IAAiBrB,EAAKsB,GAAG,eAAgB,MAE5DC,EAAG,KAELT,EAAAA,EAAAA,IAAaH,GAAoB,CAC/B,iBAAkB,OAClBkB,KAAM,UACN,cAAe,OACd,CACD/I,SAASqI,EAAAA,EAAAA,KAAS,IAAM,EACtBL,EAAAA,EAAAA,IAAaN,EAAyB,KAAM,CAC1CtF,OAAOiG,EAAAA,EAAAA,KAAS,IAAM,EACpBW,EAAAA,EAAAA,IAAoB,OAAQ,MAAMT,EAAAA,EAAAA,IAAiBrB,EAAKsB,GAAG,0BAA2B,MAExFxI,SAASqI,EAAAA,EAAAA,KAAS,IAAM,EACtBL,EAAAA,EAAAA,IAAaP,EAAsB,CACjCwB,WAAY/F,EAAkBb,MAC9B,sBAAuB8E,EAAO,KAAOA,EAAO,GAAM+B,GAAkBhG,EAAmBb,MAAQ6G,GAC/FH,KAAM,QACNI,YAAajC,EAAKsB,GAAG,yBACrBY,SAAU/D,GACT,CACDrF,SAASqI,EAAAA,EAAAA,KAAS,IAAM,GACrBP,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoBsB,EAAAA,GAAW,MAAMC,EAAAA,EAAAA,IAAYnH,GAAeoH,IACtEvB,EAAAA,EAAAA,IAAaR,EAAsB,CACxC9E,IAAK6G,EAAKlH,MACVD,MAAOmH,EAAKnH,MACZC,MAAOkH,EAAKlH,OACX,KAAM,EAAG,CAAC,QAAS,YACpB,QAENoG,EAAG,GACF,EAAG,CAAC,aAAc,mBAEvBA,EAAG,KAELT,EAAAA,EAAAA,IAAaN,EAAyB,KAAM,CAC1CtF,OAAOiG,EAAAA,EAAAA,KAAS,IAAM,EACpBW,EAAAA,EAAAA,IAAoB,OAAQ,MAAMT,EAAAA,EAAAA,IAAiBrB,EAAKsB,GAAG,cAAe,MAE5ExI,SAASqI,EAAAA,EAAAA,KAAS,IAAM,EACtBL,EAAAA,EAAAA,IAAaP,EAAsB,CACjCwB,WAAYjG,EAAIX,MAChB,sBAAuB8E,EAAO,KAAOA,EAAO,GAAM+B,GAAkBlG,EAAKX,MAAQ6G,GACjFH,KAAM,QACNI,YAAajC,EAAKsB,GAAG,wBACrBY,SAAUjE,GACT,CACDnF,SAASqI,EAAAA,EAAAA,KAAS,IAAM,GACrBP,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoBsB,EAAAA,GAAW,MAAMC,EAAAA,EAAAA,IAAY/E,GAAUgF,IACjEvB,EAAAA,EAAAA,IAAaR,EAAsB,CACxC9E,IAAK6G,EAAKlH,MACVD,MAAOmH,EAAKnH,MACZC,MAAOkH,EAAKlH,OACX,KAAM,EAAG,CAAC,QAAS,YACpB,QAENoG,EAAG,GACF,EAAG,CAAC,aAAc,mBAEvBA,EAAG,IAEU,YAAdzF,EAAIX,QACAyF,EAAAA,EAAAA,OAAc0B,EAAAA,EAAAA,IAAa9B,EAAyB,CAAEhF,IAAK,GAAK,CAC/DN,OAAOiG,EAAAA,EAAAA,KAAS,IAAM,EACpBW,EAAAA,EAAAA,IAAoB,OAAQ,MAAMT,EAAAA,EAAAA,IAAiBrB,EAAKsB,GAAG,gBAAiB,MAE9ExI,SAASqI,EAAAA,EAAAA,KAAS,IAAM,EACtBL,EAAAA,EAAAA,IAAaL,EAAqB,CAChCsB,WAAYtM,EAAY0F,MACxB,sBAAuB8E,EAAO,KAAOA,EAAO,GAAM+B,GAAkBvM,EAAa0F,MAAQ6G,GACzFC,YAAajC,EAAKsB,GAAG,0BACrBO,KAAM,QACNU,UAAW,GACXC,OAAQjE,GACP,KAAM,EAAG,CAAC,aAAc,mBAE7BgD,EAAG,MAELkB,EAAAA,EAAAA,IAAoB,IAAI,IA4BxBA,EAAAA,EAAAA,IAAoB,IAAI,GACb,aAAd3G,EAAIX,QACAyF,EAAAA,EAAAA,OAAc0B,EAAAA,EAAAA,IAAa9B,EAAyB,CAAEhF,IAAK,GAAK,CAC/DN,OAAOiG,EAAAA,EAAAA,KAAS,IAAM,EACpBW,EAAAA,EAAAA,IAAoB,OAAQ,MAAMT,EAAAA,EAAAA,IAAiBrB,EAAKsB,GAAG,WAAY,MAEzExI,SAASqI,EAAAA,EAAAA,KAAS,IAAM,EACtBL,EAAAA,EAAAA,IAAaL,EAAqB,CAChCsB,WAAYrM,EAAOyF,MACnB,sBAAuB8E,EAAO,KAAOA,EAAO,GAAM+B,GAAkBtM,EAAQyF,MAAQ6G,GACpFC,YAAajC,EAAKsB,GAAG,qBACrBO,KAAM,QACNW,OAAQlE,GACP,KAAM,EAAG,CAAC,aAAc,mBAE7BiD,EAAG,MAELkB,EAAAA,EAAAA,IAAoB,IAAI,GACb,aAAd3G,EAAIX,QACAyF,EAAAA,EAAAA,OAAc0B,EAAAA,EAAAA,IAAa9B,EAAyB,CAAEhF,IAAK,GAAK,CAC/DN,OAAOiG,EAAAA,EAAAA,KAAS,IAAM,EACpBW,EAAAA,EAAAA,IAAoB,OAAQ,MAAMT,EAAAA,EAAAA,IAAiBrB,EAAKsB,GAAG,oBAAqB,MAElFxI,SAASqI,EAAAA,EAAAA,KAAS,IAAM,EACtBL,EAAAA,EAAAA,IAAaL,EAAqB,CAChCsB,WAAYzF,EAASnB,MACrB,sBAAuB8E,EAAO,KAAOA,EAAO,GAAM+B,GAAkB1F,EAAUnB,MAAQ6G,GACtFC,YAAajC,EAAKsB,GAAG,mBACrBO,KAAM,QACNW,OAAQhE,GACP,KAAM,EAAG,CAAC,aAAc,mBAE7B+C,EAAG,MAELkB,EAAAA,EAAAA,IAAoB,IAAI,GACb,aAAd3G,EAAIX,QACAyF,EAAAA,EAAAA,OAAc0B,EAAAA,EAAAA,IAAa9B,EAAyB,CAAEhF,IAAK,GAAK,CAC/DN,OAAOiG,EAAAA,EAAAA,KAAS,IAAM,EACpBW,EAAAA,EAAAA,IAAoB,OAAQ,MAAMT,EAAAA,EAAAA,IAAiBrB,EAAKsB,GAAG,iBAAkB,MAE/ExI,SAASqI,EAAAA,EAAAA,KAAS,IAAM,EACtBL,EAAAA,EAAAA,IAAaP,EAAsB,CACjCwB,WAAY5F,EAAMhB,MAClB,sBAAuB8E,EAAO,KAAOA,EAAO,GAAM+B,GAAkB7F,EAAOhB,MAAQ6G,GACnFH,KAAM,QACNI,YAAajC,EAAKsB,GAAG,gBACrBY,SAAU7D,GACT,CACDvF,SAASqI,EAAAA,EAAAA,KAAS,IAAM,GACrBP,EAAAA,EAAAA,KAAW,IAAOC,EAAAA,EAAAA,IAAoBsB,EAAAA,GAAW,MAAMC,EAAAA,EAAAA,KAAYM,EAAAA,EAAAA,IAAOjH,IAAa4G,KAC9EzB,EAAAA,EAAAA,OAAc0B,EAAAA,EAAAA,IAAahC,EAAsB,CACvD9E,IAAK6G,EAAKlH,MACVD,MAAOmH,EAAKnH,MACZC,MAAOkH,EAAKlH,OACX,KAAM,EAAG,CAAC,QAAS,aACpB,SAENoG,EAAG,GACF,EAAG,CAAC,aAAc,mBAEvBA,EAAG,MAELkB,EAAAA,EAAAA,IAAoB,IAAI,GACb,aAAd3G,EAAIX,QACAyF,EAAAA,EAAAA,OAAc0B,EAAAA,EAAAA,IAAa9B,EAAyB,CAAEhF,IAAK,GAAK,CAC/DN,OAAOiG,EAAAA,EAAAA,KAAS,IAAM,EACpBW,EAAAA,EAAAA,IAAoB,OAAQ,MAAMT,EAAAA,EAAAA,IAAiBrB,EAAKsB,GAAG,uBAAwB,MAErFxI,SAASqI,EAAAA,EAAAA,KAAS,IAAM,EACtBL,EAAAA,EAAAA,IAAaJ,GAA4B,CACvCqB,WAAY3F,EAAYjB,MACxB,sBAAuB8E,EAAO,KAAOA,EAAO,GAAM+B,GAAkB5F,EAAajB,MAAQ6G,GACzFW,IAAK,EACLC,IAAK,EACLC,KAAM,GACNhB,KAAM,QACNK,SAAUzD,GACT,KAAM,EAAG,CAAC,kBAEf8C,EAAG,MAELkB,EAAAA,EAAAA,IAAoB,IAAI,GACb,aAAd3G,EAAIX,QACAyF,EAAAA,EAAAA,OAAc0B,EAAAA,EAAAA,IAAa9B,EAAyB,CAAEhF,IAAK,GAAK,CAC/DN,OAAOiG,EAAAA,EAAAA,KAAS,IAAM,EACpBW,EAAAA,EAAAA,IAAoB,OAAQ,MAAMT,EAAAA,EAAAA,IAAiBrB,EAAKsB,GAAG,qBAAsB,MAEnFxI,SAASqI,EAAAA,EAAAA,KAAS,IAAM,EACtBL,EAAAA,EAAAA,IAAaJ,GAA4B,CACvCqB,WAAY1F,EAAUlB,MACtB,sBAAuB8E,EAAO,KAAOA,EAAO,GAAM+B,GAAkB3F,EAAWlB,MAAQ6G,GACvFW,IAAK,EACLE,KAAM,EACNhB,KAAM,QACNK,SAAUvD,IACT,KAAM,EAAG,CAAC,kBAEf4C,EAAG,MAELkB,EAAAA,EAAAA,IAAoB,IAAI,GACb,UAAd3G,EAAIX,QACAyF,EAAAA,EAAAA,OAAc0B,EAAAA,EAAAA,IAAa9B,EAAyB,CAAEhF,IAAK,GAAK,CAC/DN,OAAOiG,EAAAA,EAAAA,KAAS,IAAM,EACpBW,EAAAA,EAAAA,IAAoB,OAAQ,MAAMT,EAAAA,EAAAA,IAAiBrB,EAAKsB,GAAG,WAAY,MAEzExI,SAASqI,EAAAA,EAAAA,KAAS,IAAM,EACtBL,EAAAA,EAAAA,IAAaL,EAAqB,CAChCsB,WAAYpM,EAAYwF,MACxB,sBAAuB8E,EAAO,KAAOA,EAAO,GAAM+B,GAAkBrM,EAAawF,MAAQ6G,GACzFC,YAAajC,EAAKsB,GAAG,qBACrBO,KAAM,QACNW,OAAQ5D,IACP,KAAM,EAAG,CAAC,aAAc,mBAE7B2C,EAAG,MAELkB,EAAAA,EAAAA,IAAoB,IAAI,GACb,UAAd3G,EAAIX,QACAyF,EAAAA,EAAAA,OAAc0B,EAAAA,EAAAA,IAAa9B,EAAyB,CAAEhF,IAAK,GAAK,CAC/DN,OAAOiG,EAAAA,EAAAA,KAAS,IAAM,EACpBW,EAAAA,EAAAA,IAAoB,OAAQ,MAAMT,EAAAA,EAAAA,IAAiBrB,EAAKsB,GAAG,yBAA0B,MAEvFxI,SAASqI,EAAAA,EAAAA,KAAS,IAAM,EACtBL,EAAAA,EAAAA,IAAaL,EAAqB,CAChCsB,WAAYxF,EAAiBpB,MAC7B,sBAAuB8E,EAAO,MAAQA,EAAO,IAAO+B,GAAkBzF,EAAkBpB,MAAQ6G,GAChGC,YAAajC,EAAKsB,GAAG,wBACrBO,KAAM,QACNW,OAAQ3D,IACP,KAAM,EAAG,CAAC,aAAc,mBAE7B0C,EAAG,MAELkB,EAAAA,EAAAA,IAAoB,IAAI,GACb,UAAd3G,EAAIX,QACAyF,EAAAA,EAAAA,OAAc0B,EAAAA,EAAAA,IAAa9B,EAAyB,CAAEhF,IAAK,GAAK,CAC/DN,OAAOiG,EAAAA,EAAAA,KAAS,IAAM,EACpBW,EAAAA,EAAAA,IAAoB,OAAQ,MAAMT,EAAAA,EAAAA,IAAiBrB,EAAKsB,GAAG,+BAAgC,MAE7FxI,SAASqI,EAAAA,EAAAA,KAAS,IAAM,EACtBL,EAAAA,EAAAA,IAAaL,EAAqB,CAChCsB,WAAYvF,EAAoBrB,MAChC,sBAAuB8E,EAAO,MAAQA,EAAO,IAAO+B,GAAkBxF,EAAqBrB,MAAQ6G,GACnGC,YAAajC,EAAKsB,GAAG,8BACrBO,KAAM,QACNW,OAAQ1D,IACP,KAAM,EAAG,CAAC,aAAc,mBAE7ByC,EAAG,MAELkB,EAAAA,EAAAA,IAAoB,IAAI,GACb,UAAd3G,EAAIX,QACAyF,EAAAA,EAAAA,OAAc0B,EAAAA,EAAAA,IAAa9B,EAAyB,CAAEhF,IAAK,IAAM,CAChEN,OAAOiG,EAAAA,EAAAA,KAAS,IAAM,EACpBW,EAAAA,EAAAA,IAAoB,OAAQ,MAAMT,EAAAA,EAAAA,IAAiBrB,EAAKsB,GAAG,uBAAwB,MAErFxI,SAASqI,EAAAA,EAAAA,KAAS,IAAM,EACtBL,EAAAA,EAAAA,IAAaJ,GAA4B,CACvCqB,WAAYrF,EAAiBvB,MAC7B,sBAAuB8E,EAAO,MAAQA,EAAO,IAAO+B,GAAkBtF,EAAkBvB,MAAQ6G,GAChGW,IAAK,EACLC,IAAK,EACLC,KAAM,GACNhB,KAAM,QACNK,SAAUlD,IACT,KAAM,EAAG,CAAC,kBAEfuC,EAAG,MAELkB,EAAAA,EAAAA,IAAoB,IAAI,GACb,UAAd3G,EAAIX,QACAyF,EAAAA,EAAAA,OAAc0B,EAAAA,EAAAA,IAAa9B,EAAyB,CAAEhF,IAAK,IAAM,CAChEN,OAAOiG,EAAAA,EAAAA,KAAS,IAAM,EACpBW,EAAAA,EAAAA,IAAoB,OAAQ,MAAMT,EAAAA,EAAAA,IAAiBrB,EAAKsB,GAAG,qBAAsB,MAEnFxI,SAASqI,EAAAA,EAAAA,KAAS,IAAM,EACtBL,EAAAA,EAAAA,IAAaJ,GAA4B,CACvCqB,WAAYtF,EAAetB,MAC3B,sBAAuB8E,EAAO,MAAQA,EAAO,IAAO+B,GAAkBvF,EAAgBtB,MAAQ6G,GAC9FW,IAAK,EACLE,KAAM,EACNhB,KAAM,QACNK,SAAUnD,IACT,KAAM,EAAG,CAAC,kBAEfwC,EAAG,MAELkB,EAAAA,EAAAA,IAAoB,IAAI,GACb,SAAd3G,EAAIX,QACAyF,EAAAA,EAAAA,OAAc0B,EAAAA,EAAAA,IAAa9B,EAAyB,CAAEhF,IAAK,IAAM,CAChEN,OAAOiG,EAAAA,EAAAA,KAAS,IAAM,EACpBW,EAAAA,EAAAA,IAAoB,OAAQ,MAAMT,EAAAA,EAAAA,IAAiBrB,EAAKsB,GAAG,WAAY,MAEzExI,SAASqI,EAAAA,EAAAA,KAAS,IAAM,EACtBL,EAAAA,EAAAA,IAAaL,EAAqB,CAChCsB,WAAYnM,EAAWuF,MACvB,sBAAuB8E,EAAO,MAAQA,EAAO,IAAO+B,GAAkBpM,EAAYuF,MAAQ6G,GAC1FC,YAAajC,EAAKsB,GAAG,qBACrBO,KAAM,QACNW,OAAQvD,IACP,KAAM,EAAG,CAAC,aAAc,mBAE7BsC,EAAG,MAELkB,EAAAA,EAAAA,IAAoB,IAAI,GACb,SAAd3G,EAAIX,QACAyF,EAAAA,EAAAA,OAAc0B,EAAAA,EAAAA,IAAa9B,EAAyB,CAAEhF,IAAK,IAAM,CAChEN,OAAOiG,EAAAA,EAAAA,KAAS,IAAM,EACpBW,EAAAA,EAAAA,IAAoB,OAAQ,MAAMT,EAAAA,EAAAA,IAAiBrB,EAAKsB,GAAG,wBAAyB,MAEtFxI,SAASqI,EAAAA,EAAAA,KAAS,IAAM,EACtBL,EAAAA,EAAAA,IAAaL,EAAqB,CAChCsB,WAAYpF,EAAgBxB,MAC5B,sBAAuB8E,EAAO,MAAQA,EAAO,IAAO+B,GAAkBrF,EAAiBxB,MAAQ6G,GAC/FC,YAAajC,EAAKsB,GAAG,uBACrBO,KAAM,QACNW,OAAQtD,IACP,KAAM,EAAG,CAAC,aAAc,mBAE7BqC,EAAG,MAELkB,EAAAA,EAAAA,IAAoB,IAAI,GACb,SAAd3G,EAAIX,QACAyF,EAAAA,EAAAA,OAAc0B,EAAAA,EAAAA,IAAa9B,EAAyB,CAAEhF,IAAK,IAAM,CAChEN,OAAOiG,EAAAA,EAAAA,KAAS,IAAM,EACpBW,EAAAA,EAAAA,IAAoB,OAAQ,MAAMT,EAAAA,EAAAA,IAAiBrB,EAAKsB,GAAG,iBAAkB,MAE/ExI,SAASqI,EAAAA,EAAAA,KAAS,IAAM,EACtBL,EAAAA,EAAAA,IAAaP,EAAsB,CACjCwB,WAAYnF,EAAUzB,MACtB,sBAAuB8E,EAAO,MAAQA,EAAO,IAAO+B,GAAkBpF,EAAWzB,MAAQ6G,GACzFH,KAAM,QACNI,YAAajC,EAAKsB,GAAG,gBACrBY,SAAU7C,IACT,CACDvG,SAASqI,EAAAA,EAAAA,KAAS,IAAM,GACrBP,EAAAA,EAAAA,KAAW,IAAOC,EAAAA,EAAAA,IAAoBsB,EAAAA,GAAW,MAAMC,EAAAA,EAAAA,KAAYM,EAAAA,EAAAA,IAAO/G,IAAiB0G,KAClFzB,EAAAA,EAAAA,OAAc0B,EAAAA,EAAAA,IAAahC,EAAsB,CACvD9E,IAAK6G,EAAKlH,MACVD,MAAOmH,EAAKnH,MACZC,MAAOkH,EAAKlH,OACX,KAAM,EAAG,CAAC,QAAS,aACpB,SAENoG,EAAG,GACF,EAAG,CAAC,aAAc,mBAEvBA,EAAG,MAELkB,EAAAA,EAAAA,IAAoB,IAAI,GACb,SAAd3G,EAAIX,QACAyF,EAAAA,EAAAA,OAAc0B,EAAAA,EAAAA,IAAa9B,EAAyB,CAAEhF,IAAK,IAAM,CAChEN,OAAOiG,EAAAA,EAAAA,KAAS,IAAM,EACpBW,EAAAA,EAAAA,IAAoB,OAAQ,MAAMT,EAAAA,EAAAA,IAAiBrB,EAAKsB,GAAG,uBAAwB,MAErFxI,SAASqI,EAAAA,EAAAA,KAAS,IAAM,EACtBL,EAAAA,EAAAA,IAAaJ,GAA4B,CACvCqB,WAAYlF,EAAgB1B,MAC5B,sBAAuB8E,EAAO,MAAQA,EAAO,IAAO+B,GAAkBnF,EAAiB1B,MAAQ6G,GAC/FW,IAAK,EACLC,IAAK,EACLC,KAAM,GACNhB,KAAM,QACNK,SAAU9C,IACT,KAAM,EAAG,CAAC,kBAEfmC,EAAG,MAELkB,EAAAA,EAAAA,IAAoB,IAAI,GACb,SAAd3G,EAAIX,QACAyF,EAAAA,EAAAA,OAAc0B,EAAAA,EAAAA,IAAa9B,EAAyB,CAAEhF,IAAK,IAAM,CAChEN,OAAOiG,EAAAA,EAAAA,KAAS,IAAM,EACpBW,EAAAA,EAAAA,IAAoB,OAAQ,MAAMT,EAAAA,EAAAA,IAAiBrB,EAAKsB,GAAG,qBAAsB,MAEnFxI,SAASqI,EAAAA,EAAAA,KAAS,IAAM,EACtBL,EAAAA,EAAAA,IAAaJ,GAA4B,CACvCqB,WAAYjF,EAAc3B,MAC1B,sBAAuB8E,EAAO,MAAQA,EAAO,IAAO+B,GAAkBlF,EAAe3B,MAAQ6G,GAC7FW,IAAK,EACLE,KAAM,EACNhB,KAAM,QACNK,SAAU/C,IACT,KAAM,EAAG,CAAC,kBAEfoC,EAAG,MAELkB,EAAAA,EAAAA,IAAoB,IAAI,GACb,WAAd3G,EAAIX,QACAyF,EAAAA,EAAAA,OAAc0B,EAAAA,EAAAA,IAAa9B,EAAyB,CAAEhF,IAAK,IAAM,CAChEN,OAAOiG,EAAAA,EAAAA,KAAS,IAAM,EACpBW,EAAAA,EAAAA,IAAoB,OAAQ,MAAMT,EAAAA,EAAAA,IAAiBrB,EAAKsB,GAAG,WAAY,MAEzExI,SAASqI,EAAAA,EAAAA,KAAS,IAAM,EACtBL,EAAAA,EAAAA,IAAaL,EAAqB,CAChCsB,WAAYlM,EAAasF,MACzB,sBAAuB8E,EAAO,MAAQA,EAAO,IAAO+B,GAAkBnM,EAAcsF,MAAQ6G,GAC5FC,YAAajC,EAAKsB,GAAG,qBACrBO,KAAM,QACNW,OAAQlD,IACP,KAAM,EAAG,CAAC,aAAc,mBAE7BiC,EAAG,MAELkB,EAAAA,EAAAA,IAAoB,IAAI,GACb,WAAd3G,EAAIX,QACAyF,EAAAA,EAAAA,OAAc0B,EAAAA,EAAAA,IAAa9B,EAAyB,CAAEhF,IAAK,IAAM,CAChEN,OAAOiG,EAAAA,EAAAA,KAAS,IAAM,EACpBW,EAAAA,EAAAA,IAAoB,OAAQ,MAAMT,EAAAA,EAAAA,IAAiBrB,EAAKsB,GAAG,uBAAwB,MAErFxI,SAASqI,EAAAA,EAAAA,KAAS,IAAM,EACtBL,EAAAA,EAAAA,IAAaJ,GAA4B,CACvCqB,WAAY/E,EAAkB7B,MAC9B,sBAAuB8E,EAAO,MAAQA,EAAO,IAAO+B,GAAkBhF,EAAmB7B,MAAQ6G,GACjGW,IAAK,EACLC,IAAK,EACLC,KAAM,GACNhB,KAAM,QACNK,SAAU1C,IACT,KAAM,EAAG,CAAC,kBAEf+B,EAAG,MAELkB,EAAAA,EAAAA,IAAoB,IAAI,GACb,WAAd3G,EAAIX,QACAyF,EAAAA,EAAAA,OAAc0B,EAAAA,EAAAA,IAAa9B,EAAyB,CAAEhF,IAAK,IAAM,CAChEN,OAAOiG,EAAAA,EAAAA,KAAS,IAAM,EACpBW,EAAAA,EAAAA,IAAoB,OAAQ,MAAMT,EAAAA,EAAAA,IAAiBrB,EAAKsB,GAAG,qBAAsB,MAEnFxI,SAASqI,EAAAA,EAAAA,KAAS,IAAM,EACtBL,EAAAA,EAAAA,IAAaJ,GAA4B,CACvCqB,WAAY9E,EAAgB9B,MAC5B,sBAAuB8E,EAAO,MAAQA,EAAO,IAAO+B,GAAkB/E,EAAiB9B,MAAQ6G,GAC/FW,IAAK,EACLE,KAAM,EACNhB,KAAM,QACNK,SAAU3C,IACT,KAAM,EAAG,CAAC,kBAEfgC,EAAG,MAELkB,EAAAA,EAAAA,IAAoB,IAAI,GACb,WAAd3G,EAAIX,QACAyF,EAAAA,EAAAA,OAAc0B,EAAAA,EAAAA,IAAa9B,EAAyB,CAAEhF,IAAK,IAAM,CAChEN,OAAOiG,EAAAA,EAAAA,KAAS,IAAM,EACpBW,EAAAA,EAAAA,IAAoB,OAAQ,MAAMT,EAAAA,EAAAA,IAAiBrB,EAAKsB,GAAG,iBAAkB,MAE/ExI,SAASqI,EAAAA,EAAAA,KAAS,IAAM,EACtBL,EAAAA,EAAAA,IAAaP,EAAsB,CACjCwB,WAAYhF,EAAY5B,MACxB,sBAAuB8E,EAAO,MAAQA,EAAO,IAAO+B,GAAkBjF,EAAa5B,MAAQ6G,GAC3FH,KAAM,QACNI,YAAajC,EAAKsB,GAAG,gBACrBY,SAAUzC,IACT,CACD3G,SAASqI,EAAAA,EAAAA,KAAS,IAAM,GACrBP,EAAAA,EAAAA,KAAW,IAAOC,EAAAA,EAAAA,IAAoBsB,EAAAA,GAAW,MAAMC,EAAAA,EAAAA,KAAYM,EAAAA,EAAAA,IAAO9G,IAAmByG,KACpFzB,EAAAA,EAAAA,OAAc0B,EAAAA,EAAAA,IAAahC,EAAsB,CACvD9E,IAAK6G,EAAKlH,MACVD,MAAOmH,EAAKnH,MACZC,MAAOkH,EAAKlH,OACX,KAAM,EAAG,CAAC,QAAS,aACpB,SAENoG,EAAG,GACF,EAAG,CAAC,aAAc,mBAEvBA,EAAG,MAELkB,EAAAA,EAAAA,IAAoB,IAAI,GACb,WAAd3G,EAAIX,QACAyF,EAAAA,EAAAA,OAAc0B,EAAAA,EAAAA,IAAa9B,EAAyB,CAAEhF,IAAK,IAAM,CAChEN,OAAOiG,EAAAA,EAAAA,KAAS,IAAM,EACpBW,EAAAA,EAAAA,IAAoB,OAAQ,MAAMT,EAAAA,EAAAA,IAAiBrB,EAAKsB,GAAG,0BAA2B,MAExFxI,SAASqI,EAAAA,EAAAA,KAAS,IAAM,EACtBL,EAAAA,EAAAA,IAAaL,EAAqB,CAChCsB,WAAY7E,EAAe/B,MAC3B,sBAAuB8E,EAAO,MAAQA,EAAO,IAAO+B,GAAkB9E,EAAgB/B,MAAQ6G,GAC9FC,YAAajC,EAAKsB,GAAG,yBACrBO,KAAM,QACNW,OAAQ9C,IACP,KAAM,EAAG,CAAC,aAAc,mBAE7B6B,EAAG,MAELkB,EAAAA,EAAAA,IAAoB,IAAI,GACb,WAAd3G,EAAIX,QACAyF,EAAAA,EAAAA,OAAc0B,EAAAA,EAAAA,IAAa9B,EAAyB,CAAEhF,IAAK,IAAM,CAChEN,OAAOiG,EAAAA,EAAAA,KAAS,IAAM,EACpBW,EAAAA,EAAAA,IAAoB,OAAQ,MAAMT,EAAAA,EAAAA,IAAiBrB,EAAKsB,GAAG,iBAAkB,MAE/ExI,SAASqI,EAAAA,EAAAA,KAAS,IAAM,EACtBL,EAAAA,EAAAA,IAAaP,EAAsB,CACjCwB,WAAY5E,EAAYhC,MACxB,sBAAuB8E,EAAO,MAAQA,EAAO,IAAO+B,GAAkB7E,EAAahC,MAAQ6G,GAC3FH,KAAM,QACNI,YAAajC,EAAKsB,GAAG,gBACrBY,SAAUvC,IACT,CACD7G,SAASqI,EAAAA,EAAAA,KAAS,IAAM,GACrBP,EAAAA,EAAAA,KAAW,IAAOC,EAAAA,EAAAA,IAAoBsB,EAAAA,GAAW,MAAMC,EAAAA,EAAAA,KAAYM,EAAAA,EAAAA,IAAO7G,IAAmBwG,KACpFzB,EAAAA,EAAAA,OAAc0B,EAAAA,EAAAA,IAAahC,EAAsB,CACvD9E,IAAK6G,EAAKlH,MACVD,MAAOmH,EAAKnH,MACZC,MAAOkH,EAAKlH,OACX,KAAM,EAAG,CAAC,QAAS,aACpB,SAENoG,EAAG,GACF,EAAG,CAAC,aAAc,mBAEvBA,EAAG,MAELkB,EAAAA,EAAAA,IAAoB,IAAI,GACb,WAAd3G,EAAIX,QACAyF,EAAAA,EAAAA,OAAc0B,EAAAA,EAAAA,IAAa9B,EAAyB,CAAEhF,IAAK,IAAM,CAChEN,OAAOiG,EAAAA,EAAAA,KAAS,IAAM,EACpBW,EAAAA,EAAAA,IAAoB,OAAQ,MAAMT,EAAAA,EAAAA,IAAiBrB,EAAKsB,GAAG,uBAAwB,MAErFxI,SAASqI,EAAAA,EAAAA,KAAS,IAAM,EACtBL,EAAAA,EAAAA,IAAaJ,GAA4B,CACvCqB,WAAY3E,EAAkBjC,MAC9B,sBAAuB8E,EAAO,MAAQA,EAAO,IAAO+B,GAAkB5E,EAAmBjC,MAAQ6G,GACjGW,IAAK,EACLC,IAAK,EACLC,KAAM,GACNhB,KAAM,QACNK,SAAUtC,IACT,KAAM,EAAG,CAAC,kBAEf2B,EAAG,MAELkB,EAAAA,EAAAA,IAAoB,IAAI,IAC5B3B,EAAAA,EAAAA,IAAaN,EAAyB,KAAM,CAC1CtF,OAAOiG,EAAAA,EAAAA,KAAS,IAAM,EACpBW,EAAAA,EAAAA,IAAoB,OAAQ,MAAMT,EAAAA,EAAAA,IAAiBrB,EAAKsB,GAAG,yBAA0B,MAEvFxI,SAASqI,EAAAA,EAAAA,KAAS,IAAM,EACtBL,EAAAA,EAAAA,IAAaP,EAAsB,CACjCwB,WAAY9F,EAAcd,MAC1B,sBAAuB8E,EAAO,MAAQA,EAAO,IAAO+B,GAAkB/F,EAAed,MAAQ6G,GAC7FH,KAAM,QACNI,YAAajC,EAAKsB,GAAG,wBACrBY,SAAU9D,GACT,CACDtF,SAASqI,EAAAA,EAAAA,KAAS,IAAM,GACrBP,EAAAA,EAAAA,KAAW,IAAOC,EAAAA,EAAAA,IAAoBsB,EAAAA,GAAW,MAAMC,EAAAA,EAAAA,KAAYM,EAAAA,EAAAA,IAAOtH,IAAqBiH,KACtFzB,EAAAA,EAAAA,OAAc0B,EAAAA,EAAAA,IAAahC,EAAsB,CACvD9E,IAAK6G,EAAKlH,MACVD,MAAOmH,EAAKnH,MACZC,MAAOkH,EAAKlH,OACX,KAAM,EAAG,CAAC,QAAS,aACpB,SAENoG,EAAG,GACF,EAAG,CAAC,aAAc,mBAEvBA,EAAG,OAGPA,EAAG,OAGPA,EAAG,OAGPA,EAAG,KAEL,CAEJ,ICr5BA,MAAMuB,EAAc,EAEpB,O","sources":["webpack://word-gpt-plus/./src/utils/common.ts","webpack://word-gpt-plus/./src/utils/constant.ts","webpack://word-gpt-plus/./src/pages/SettingsPage.vue?bd5e","webpack://word-gpt-plus/./src/pages/SettingsPage.vue"],"sourcesContent":["export interface Auth {\n  type: 'web-api' | 'official' | 'azure' | 'palm' | 'gemini' | 'ollama'\n  [propName: string]: any;\n}\n\nexport function checkAuth (auth: Auth): boolean {\n  return (\n    auth &&\n    ((auth.type === 'web-api' && !!auth.accessToken) ||\n      (auth.type === 'official' && !!auth.apiKey) ||\n      (auth.type === 'azure' && !!auth.azureAPIKey) ||\n      (auth.type === 'palm' && !!auth.palmAPIKey) ||\n      (auth.type === 'gemini' && !!auth.geminiAPIKey) ||\n      (auth.type === 'ollama'))\n  )\n}\n\nexport function forceNumber (val: any) {\n  if (val === '') {\n    return 0\n  }\n  return isNaN(Number(val)) ? 0 : Number(val)\n}\n","import { IStringKeyMap } from '../types'\n\nexport const languageMap: IStringKeyMap = {\n  en: 'English',\n  es: 'Español',\n  fr: 'Français',\n  de: 'Deutsch',\n  it: 'Italiano',\n  pt: 'Português',\n  hi: 'हिन्दी',\n  ar: 'العربية',\n  'zh-cn': '简体中文',\n  'zh-tw': '繁體中文',\n  ja: '日本語',\n  ko: '한국어',\n  ru: 'Русский',\n  nl: 'Nederlands',\n  sv: 'Svenska',\n  fi: 'Suomi',\n  no: 'Norsk',\n  da: 'Dansk',\n  pl: 'Polski',\n  tr: 'Türkçe',\n  el: 'Ελληνικά',\n  he: 'עברית',\n  hu: 'Magyar',\n  id: 'Bahasa Indonesia',\n  ms: 'Bahasa Melayu',\n  th: 'ไทย',\n  vi: 'Tiếng Việt',\n  uk: 'Українська',\n  bg: 'Български',\n  cs: 'Čeština',\n  ro: 'Română',\n  sk: 'Slovenčina',\n  sl: 'Slovenščina',\n  hr: 'Hrvatski',\n  sr: 'Српски',\n  bn: 'বাংলা',\n  gu: 'ગુજરાતી',\n  kn: 'ಕನ್ನಡ',\n  mr: 'मराठी',\n  ta: 'தமிழ்',\n  te: 'తెలుగు',\n  ur: 'اردو'\n}\n\n// Openai API 可用的模型\nexport const availableModels: IStringKeyMap = {\n  'gpt-4o': 'gpt-4o',\n  'gpt-3.5': 'gpt-3.5-turbo',\n  'gpt-3.5-turbo-1106': 'gpt-3.5-turbo-1106',\n  'gpt-3.5-16k': 'gpt-3.5-turbo-16k',\n  'gpt-3.5-16k-0613': 'gpt-3.5-turbo-16k-0613',\n  'text-davinci-003': 'text-davinci-003',\n  gtp4: 'gpt-4',\n  'gpt-4-turbo': 'gpt-4-turbo',\n  'gpt-4-turo-preview': 'gpt-4-turo-preview',\n  'gpt4-0613': 'gpt-4-0613',\n  'gpt4-32k': 'gpt-4-32k',\n  'gpt4-32k-0613': 'gpt-4-32k-0613'\n}\n\n// Web API 可用的模型\nexport const availableModelsForPlus: IStringKeyMap = {\n  default: 'text-davinci-002-render-sha',\n  'legacy(plus)': 'model=text-davinci-002-render-paid',\n  'gpt4(plus)': 'gpt4'\n}\n\n// palm api 可用的模型\nexport const availableModelsForPalm: IStringKeyMap = {\n  'text-bison-001': 'text-bison-001'\n}\n\n// Gemini API 可用的模型\nexport const availableModelsForGemini: IStringKeyMap = {\n  'gemini-pro': 'gemini-pro',\n  'gemini-1.5-flash': 'gemini-1.5-flash',\n  'gemini-1.5-pro': 'gemini-1.5-pro-latest'\n}\n\n// Ollama API 可用的模型\nexport const availableModelsForOllama: IStringKeyMap = {\n  llama3: 'llama3',\n  llama2: 'llama2',\n  phi3: 'phi3',\n  wizardlm2: 'wizardlm2',\n  mistral: 'mistral',\n  'llama2-uncensored': 'llama2-uncensored',\n  'llama2:13b': 'llama2:13b',\n  'llama2:70b': 'llama2:70b',\n  'gemma:2b': 'gemma:2b',\n  'gemma:7b': 'gemma:7b',\n  qwen: 'qwen',\n  codegemma: 'codegemma',\n  'command-r': 'command-r',\n  'command-r-plus': 'command-r-plus',\n  llava: 'llava',\n  codellama: 'codellama',\n  yi: 'yi',\n  codeqwen: 'codeqwen',\n  'dolphin-phi': 'dolphin-phi',\n  phi: 'phi',\n  'neural-chat': 'neural-chat',\n  'starlinh-lm': 'starlinh-lm',\n  'orca-mini': 'orca-mini',\n  vicuna: 'vicuna'\n}\n\nexport enum localStorageKey {\n  // common\n  api = 'api',\n  localLanguage = 'localLanguage',\n  replyLanguage = 'replyLanguage',\n  insertType = 'insertType',\n  // web api\n  webModel = 'webModel',\n  accessToken = 'accessToken',\n  // official api\n  apiKey = 'apiKey',\n  model = 'model',\n  temperature = 'temperature',\n  maxTokens = 'maxTokens',\n  basePath = 'basePath',\n  // azure api\n  azureAPIKey = 'azureAPIKey',\n  azureAPIEndpoint = 'azureAPIEndpoint',\n  azureDeploymentName = 'azureDeploymentName',\n  azureMaxTokens = 'azureMaxTokens',\n  azureTemperature = 'azureTemperature',\n  // palm api\n  palmAPIKey = 'palmAPIKey',\n  palmAPIEndpoint = 'palmAPIEndpoint',\n  palmMaxTokens = 'palmMaxTokens',\n  palmTemperature = 'palmTemperature',\n  palmModel = 'palmModel',\n  // gemini api\n  geminiAPIKey = 'geminiAPIKey',\n  geminiMaxTokens = 'geminiMaxTokens',\n  geminiTemperature = 'geminiTemperature',\n  geminiModel = 'geminiModel',\n  // ollama api\n  ollamaEndpoint = 'ollamaEndpoint',\n  ollamaModel = 'ollamaModel',\n  ollamaTemperature = 'ollamaTemperature',\n  // proxy\n  enableProxy = 'enableProxy',\n  proxy = 'proxy',\n  defaultSystemPrompt = 'defaultSystemPrompt',\n  defaultPrompt = 'defaultPrompt',\n}\n\nexport const buildInPrompt = {\n  translate: {\n    system: (language: string) => `Act as an ${language} translator, spelling corrector and improver.`,\n    user: (text: string, language: string) => `I will speak to you in any language and you will detect the language,\n    translate it and answer in the corrected and improved version of my text, in ${language}.\n    I want you to replace my simplified A0-level words and sentences with more beautiful and elegant, \n    upper level ${language} words and sentences.\n    Keep the meaning same, but make them more literary.\n    I want you to only reply the correction, the improvements and nothing else, do not write explanations.\n    Reply in ${language}.\n    My first sentence is: ${text}`\n  },\n  polish: {\n    system: (language: string) => `As a writing improvement assistant, Reply in ${language}`,\n    user: (text: string, language: string) => `Improve the spelling, grammar, clarity, concision,\n    and overall readability of the text provided, while breaking down long sentences, reducing repetition,\n    and providing suggestions for improvement.\n    Please provide only the corrected ${language} version of the text and avoid including explanations.\n    Please begin by editing the following text: ${text}`\n  },\n  academic: {\n    system: (language: string) => `As an academic paper writing assistant, Reply in ${language}`,\n    user: (text: string, language: string) => `I want you to act as a professional spelling and grammar corrector and improver.\n    I want you to replace my simplified A0-level words and sentences with more beautiful and elegant,\n    upper level ${language} words and sentences.\n    Keep the meaning same, but make them more literary and improve my expression in the style of SCI papers.\n    High IF SCI papers are preferred.\n    Please begin by editing the following text: ${text}`\n  },\n  summary: {\n    system: (language: string) => `As a summarization assistant, Reply in ${language}`,\n    user: (text: string, language: string) => `Summarize the following text into 100 words,\n    making it easy to read and comprehend. The summary should be concise, clear,\n    and capture the main points of the text. Avoid using complex sentence structures or technical jargon.\n    Respond in ${language}. Please begin by editing the following text: ${text}`\n  },\n  grammar: {\n    system: (language: string) => `Act like you are an expert grammar checker. Look for mistakes and make sentences more fluent, Reply in ${language}`,\n    user: (text: string, language: string) => `Please analyze the following text for a wide range of grammatical aspects and provide corrections. Be thorough in identifying and fixing any grammatical mistakes, including checking for correct punctuation usage, ensuring proper sentence structure, enhancing readability, identifying and correcting spelling mistakes, and verifying subject-verb agreement. Your assistance in ensuring the grammatical accuracy of the text is highly appreciated. Please be thorough in your examination, and provide comprehensive corrections to enhance the overall grammatical integrity of the text.\n\n    Just reply to user input with the correct grammar, DO NOT reply to the context of the question of the user input. If the user input is grammatically correct and fluent, just reply “sounds good”.\n    Respond in ${language}. Please begin by editing the following text: ${text}`\n  }\n}\n","import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, unref as _unref } from \"vue\"\n\nconst _hoisted_1 = { id: \"setting\" }\n\nimport { onBeforeMount, ref } from 'vue'\nimport { useI18n } from 'vue-i18n'\nimport { languageMap, availableModels, localStorageKey, availableModelsForPlus, availableModelsForPalm, availableModelsForGemini, availableModelsForOllama } from '@/utils/constant'\nimport { useRouter } from 'vue-router'\nimport { forceNumber } from '@/utils/common'\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'SettingsPage',\n  setup(__props) {\n\nconst router = useRouter()\n\nconst languageList = [\n  {\n    label: 'English',\n    value: 'en'\n  },\n  {\n    label: '简体中文',\n    value: 'zh-cn'\n  }\n]\n\nconst replyLanguageList = Object.values(languageMap).map((key) => ({\n  label: key,\n  value: key\n}))\n\nconst modelList = Object.keys(availableModels).map((key) => ({\n  label: availableModels[key],\n  value: availableModels[key]\n}))\n\nconst webModelList = Object.keys(availableModelsForPlus).map((key) => ({\n  label: key,\n  value: availableModels[key]\n}))\n\nconst palmModelList = Object.keys(availableModelsForPalm).map((key) => ({\n  label: key,\n  value: availableModelsForPalm[key]\n}))\n\nconst geminiModelList = Object.keys(availableModelsForGemini).map((key) => ({\n  label: key,\n  value: availableModelsForGemini[key]\n}))\n\nconst ollamaModelList = Object.keys(availableModelsForOllama).map((key) => ({\n  label: key,\n  value: availableModelsForOllama[key]\n}))\n\nconst api = ref<'official' | 'web-api' | 'azure' | 'palm' | 'gemini' | 'ollama'>('official')\nconst currentUILanguage = ref('en')\nconst replyLanguage = ref('English')\n// web API\nconst accessToken = ref('')\nconst webModel = ref('default')\n// official API\nconst model = ref(availableModels['gpt-3.5'])\nconst apiKey = ref('')\nconst temperature = ref(0.7)\nconst maxTokens = ref(800)\nconst basePath = ref('')\n// azure OpenAI API\nconst azureAPIKey = ref('')\nconst azureAPIEndpoint = ref('')\nconst azureDeploymentName = ref('')\nconst azureMaxTokens = ref(800)\nconst azureTemperature = ref(0.7)\n// palm API\nconst palmAPIKey = ref('')\nconst palmAPIEndpoint = ref('https://generativelanguage.googleapis.com/v1beta2')\nconst palmModel = ref(availableModelsForPalm['text-bison-001'])\nconst palmTemperature = ref(0.7)\nconst palmMaxTokens = ref(800)\n// gemini API\nconst geminiAPIKey = ref('')\nconst geminiModel = ref(availableModelsForGemini['gemini-pro'])\nconst geminiTemperature = ref(0.7)\nconst geminiMaxTokens = ref(800)\n// ollama API\nconst ollamaEndpoint = ref('')\nconst ollamaModel = ref(availableModelsForOllama.llama2)\nconst ollamaTemperature = ref(0.7)\n\nconst apiList = [\n  {\n    label: 'official',\n    value: 'official'\n  },\n  {\n    label: 'azure',\n    value: 'azure'\n  },\n  {\n    label: 'palm',\n    value: 'palm'\n  },\n  {\n    label: 'gemini',\n    value: 'gemini'\n  },\n  {\n    label: 'ollama',\n    value: 'ollama'\n  }\n]\n\nconst { locale } = useI18n()\n\nonBeforeMount(() => {\n  initData()\n})\n\nfunction initData () {\n  // common\n  api.value = localStorage.getItem(localStorageKey.api) as 'official' | 'web-api' | 'azure'| 'palm' | 'gemini' | 'ollama' || 'official'\n  currentUILanguage.value = localStorage.getItem(localStorageKey.localLanguage) || 'en'\n  replyLanguage.value = localStorage.getItem(localStorageKey.replyLanguage) || 'English'\n  // web API\n  accessToken.value = localStorage.getItem(localStorageKey.accessToken) || ''\n  webModel.value = localStorage.getItem(localStorageKey.webModel) || 'default'\n  // official API\n  apiKey.value = localStorage.getItem(localStorageKey.apiKey) || ''\n  const modelTemp = localStorage.getItem(localStorageKey.model) || availableModels['gpt-3.5']\n  if (Object.keys(availableModels).includes(modelTemp)) {\n    model.value = availableModels[modelTemp]\n  } else if (Object.values(availableModels).includes(modelTemp)) {\n    model.value = modelTemp\n  } else {\n    model.value = availableModels['gpt-3.5']\n  }\n  temperature.value = forceNumber(localStorage.getItem(localStorageKey.temperature)) || 0.7\n  maxTokens.value = forceNumber(localStorage.getItem(localStorageKey.maxTokens)) || 800\n  basePath.value = localStorage.getItem(localStorageKey.basePath) || ''\n  // azure OpenAI API\n  azureAPIKey.value = localStorage.getItem(localStorageKey.azureAPIKey) || ''\n  azureAPIEndpoint.value = localStorage.getItem(localStorageKey.azureAPIEndpoint) || ''\n  azureDeploymentName.value = localStorage.getItem(localStorageKey.azureDeploymentName) || ''\n  azureMaxTokens.value = forceNumber(localStorage.getItem(localStorageKey.azureMaxTokens)) || 800\n  azureTemperature.value = forceNumber(localStorage.getItem(localStorageKey.azureTemperature)) || 0.7\n  // palm API\n  palmAPIKey.value = localStorage.getItem(localStorageKey.palmAPIKey) || ''\n  palmAPIEndpoint.value = localStorage.getItem(localStorageKey.palmAPIEndpoint) || 'https://generativelanguage.googleapis.com/v1beta2'\n  palmMaxTokens.value = forceNumber(localStorage.getItem(localStorageKey.palmMaxTokens)) || 800\n  palmTemperature.value = forceNumber(localStorage.getItem(localStorageKey.palmTemperature)) || 0.7\n  const palmModelTemp = localStorage.getItem(localStorageKey.palmModel) || availableModelsForPalm['text-bison-001']\n  if (Object.keys(availableModelsForPalm).includes(palmModelTemp)) {\n    palmModel.value = availableModelsForPalm[palmModelTemp]\n  } else if (Object.values(availableModelsForPalm).includes(palmModelTemp)) {\n    palmModel.value = palmModelTemp\n  } else {\n    palmModel.value = availableModelsForPalm['text-bison-001']\n  }\n  // gemini API\n  geminiAPIKey.value = localStorage.getItem(localStorageKey.geminiAPIKey) || ''\n  geminiMaxTokens.value = forceNumber(localStorage.getItem(localStorageKey.geminiMaxTokens)) || 800\n  geminiTemperature.value = forceNumber(localStorage.getItem(localStorageKey.geminiTemperature)) || 0.7\n  const geminiModelTemp = localStorage.getItem(localStorageKey.geminiModel) || availableModelsForGemini['gemini-pro']\n  if (Object.keys(availableModelsForGemini).includes(geminiModelTemp)) {\n    geminiModel.value = availableModelsForGemini[geminiModelTemp]\n  } else if (Object.values(availableModelsForGemini).includes(geminiModelTemp)) {\n    geminiModel.value = geminiModelTemp\n  } else {\n    geminiModel.value = availableModelsForGemini['gemini-pro']\n  }\n  // ollama API\n  ollamaEndpoint.value = localStorage.getItem(localStorageKey.ollamaEndpoint) || ''\n  const ollamaModelTemp = localStorage.getItem(localStorageKey.ollamaModel) || availableModelsForOllama.llama2\n  if (Object.keys(availableModelsForOllama).includes(ollamaModelTemp)) {\n    ollamaModel.value = availableModelsForOllama[ollamaModelTemp]\n  } else if (Object.values(availableModelsForOllama).includes(ollamaModelTemp)) {\n    ollamaModel.value = ollamaModelTemp\n  } else {\n    ollamaModel.value = availableModelsForOllama.llama2\n  }\n  ollamaTemperature.value = forceNumber(localStorage.getItem(localStorageKey.ollamaTemperature)) || 0.7\n}\n\n// common\n\nfunction handleApiChange (val: string) {\n  localStorage.setItem(localStorageKey.api, val)\n}\n\nfunction handleLocalLanguageChange (val: string) {\n  locale.value = val\n  localStorage.setItem(localStorageKey.localLanguage, val)\n}\n\nfunction handleReplyLanguageChange (val: string) {\n  localStorage.setItem(localStorageKey.replyLanguage, val)\n}\n\nfunction handleWebModelChange (val: string) {\n  localStorage.setItem(localStorageKey.webModel, val)\n}\n\nfunction handleModelChange (val: string) {\n  localStorage.setItem(localStorageKey.model, val)\n}\n\nfunction handleApiKeyChange () {\n  localStorage.setItem(localStorageKey.apiKey, apiKey.value)\n}\n\nfunction handleAccessTokenChange () {\n  localStorage.setItem(localStorageKey.accessToken, accessToken.value)\n}\n\nfunction handleBasePathChange () {\n  localStorage.setItem(localStorageKey.basePath, basePath.value)\n}\n\nfunction handleTemperatureChange () {\n  localStorage.setItem(localStorageKey.temperature, temperature.value.toString())\n}\n\nfunction handleMaxTokensChange () {\n  localStorage.setItem(localStorageKey.maxTokens, maxTokens.value.toString())\n}\n\nfunction handleAzureAPIKeyChange () {\n  localStorage.setItem(localStorageKey.azureAPIKey, azureAPIKey.value)\n}\n\nfunction handleAzureAPIEndpointChange () {\n  localStorage.setItem(localStorageKey.azureAPIEndpoint, azureAPIEndpoint.value)\n}\n\nfunction handleAzureDeploymentNameChange () {\n  localStorage.setItem(localStorageKey.azureDeploymentName, azureDeploymentName.value)\n}\n\nfunction handleAzureMaxTokensChange () {\n  localStorage.setItem(localStorageKey.azureMaxTokens, azureMaxTokens.value.toString())\n}\n\nfunction handleAzureTemperatureChange () {\n  localStorage.setItem(localStorageKey.azureTemperature, azureTemperature.value.toString())\n}\n\nfunction handlePalmAPIKeyChange () {\n  localStorage.setItem(localStorageKey.palmAPIKey, palmAPIKey.value)\n}\n\nfunction handlePalmAPIEndpointChange () {\n  localStorage.setItem(localStorageKey.palmAPIEndpoint, palmAPIEndpoint.value)\n}\n\nfunction handlePalmMaxTokensChange () {\n  localStorage.setItem(localStorageKey.palmMaxTokens, palmMaxTokens.value.toString())\n}\n\nfunction handlePalmTemperatureChange () {\n  localStorage.setItem(localStorageKey.palmTemperature, palmTemperature.value.toString())\n}\n\nfunction handlePalmModelChange (val: string) {\n  localStorage.setItem(localStorageKey.palmModel, val)\n}\n\nfunction handleGeminiAPIKeyChange () {\n  localStorage.setItem(localStorageKey.geminiAPIKey, geminiAPIKey.value)\n}\n\nfunction handleGeminiMaxTokensChange () {\n  localStorage.setItem(localStorageKey.geminiMaxTokens, geminiMaxTokens.value.toString())\n}\n\nfunction handleGeminiTemperatureChange () {\n  localStorage.setItem(localStorageKey.geminiTemperature, geminiTemperature.value.toString())\n}\n\nfunction handleGeminiModelChange (val: string) {\n  localStorage.setItem(localStorageKey.geminiModel, val)\n}\n\nfunction handleOllamaEndpointChange () {\n  localStorage.setItem(localStorageKey.ollamaEndpoint, ollamaEndpoint.value)\n}\n\nfunction handleOllamaModelChange (val: string) {\n  localStorage.setItem(localStorageKey.ollamaModel, val)\n}\n\nfunction handleOllamaTemperatureChange () {\n  localStorage.setItem(localStorageKey.ollamaTemperature, ollamaTemperature.value.toString())\n}\n\nfunction backToHome () {\n  router.push('/')\n}\n\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_el_row = _resolveComponent(\"el-row\")!\n  const _component_el_col = _resolveComponent(\"el-col\")!\n  const _component_el_button = _resolveComponent(\"el-button\")!\n  const _component_el_option = _resolveComponent(\"el-option\")!\n  const _component_el_select = _resolveComponent(\"el-select\")!\n  const _component_el_form_item = _resolveComponent(\"el-form-item\")!\n  const _component_el_input = _resolveComponent(\"el-input\")!\n  const _component_el_input_number = _resolveComponent(\"el-input-number\")!\n  const _component_el_form = _resolveComponent(\"el-form\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createVNode(_component_el_row, {\n      class: \"view-title\",\n      align: \"middle\",\n      justify: \"center\",\n      style: {\"font-size\":\"20px\",\"color\":\"black\"}\n    }, {\n      default: _withCtx(() => [\n        _createTextVNode(_toDisplayString(_ctx.$t('settings')), 1)\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_el_row, {\n      class: \"setting-list\",\n      style: {\"margin-top\":\"20px\"}\n    }, {\n      default: _withCtx(() => [\n        _createVNode(_component_el_col, {\n          span: 20,\n          offset: 2\n        }),\n        _createVNode(_component_el_row, { style: {\"width\":\"100%\",\"display\":\"flex\",\"justify-content\":\"center\",\"align-items\":\"center\",\"flex-direction\":\"column\"} }, {\n          default: _withCtx(() => [\n            _createVNode(_component_el_button, {\n              type: \"primary\",\n              round: \"\",\n              plain: \"\",\n              style: {\"margin-bottom\":\"5px\",\"width\":\"100%\"},\n              onClick: backToHome\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(_toDisplayString(_ctx.$t('backToHome')), 1)\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_el_form, {\n              \"label-position\": \"left\",\n              size: \"default\",\n              \"label-width\": \"50%\"\n            }, {\n              default: _withCtx(() => [\n                _createVNode(_component_el_form_item, null, {\n                  label: _withCtx(() => [\n                    _createElementVNode(\"span\", null, _toDisplayString(_ctx.$t('settingChooseLanguage')), 1)\n                  ]),\n                  default: _withCtx(() => [\n                    _createVNode(_component_el_select, {\n                      modelValue: currentUILanguage.value,\n                      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((currentUILanguage).value = $event)),\n                      size: \"small\",\n                      placeholder: _ctx.$t('settingChooseLanguage'),\n                      onChange: handleLocalLanguageChange\n                    }, {\n                      default: _withCtx(() => [\n                        (_openBlock(), _createElementBlock(_Fragment, null, _renderList(languageList, (item) => {\n                          return _createVNode(_component_el_option, {\n                            key: item.value,\n                            label: item.label,\n                            value: item.value\n                          }, null, 8, [\"label\", \"value\"])\n                        }), 64))\n                      ]),\n                      _: 1\n                    }, 8, [\"modelValue\", \"placeholder\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_el_form_item, null, {\n                  label: _withCtx(() => [\n                    _createElementVNode(\"span\", null, _toDisplayString(_ctx.$t('chooseAPI')), 1)\n                  ]),\n                  default: _withCtx(() => [\n                    _createVNode(_component_el_select, {\n                      modelValue: api.value,\n                      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((api).value = $event)),\n                      size: \"small\",\n                      placeholder: _ctx.$t('chooseAPIDescription'),\n                      onChange: handleApiChange\n                    }, {\n                      default: _withCtx(() => [\n                        (_openBlock(), _createElementBlock(_Fragment, null, _renderList(apiList, (item) => {\n                          return _createVNode(_component_el_option, {\n                            key: item.value,\n                            label: item.label,\n                            value: item.value\n                          }, null, 8, [\"label\", \"value\"])\n                        }), 64))\n                      ]),\n                      _: 1\n                    }, 8, [\"modelValue\", \"placeholder\"])\n                  ]),\n                  _: 1\n                }),\n                (api.value === 'web-api')\n                  ? (_openBlock(), _createBlock(_component_el_form_item, { key: 0 }, {\n                      label: _withCtx(() => [\n                        _createElementVNode(\"span\", null, _toDisplayString(_ctx.$t('accessToken')), 1)\n                      ]),\n                      default: _withCtx(() => [\n                        _createVNode(_component_el_input, {\n                          modelValue: accessToken.value,\n                          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((accessToken).value = $event)),\n                          placeholder: _ctx.$t('accessTokenDescription'),\n                          size: \"small\",\n                          clearable: \"\",\n                          onBlur: handleAccessTokenChange\n                        }, null, 8, [\"modelValue\", \"placeholder\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                false\n                  ? (_openBlock(), _createBlock(_component_el_form_item, { key: 1 }, {\n                      label: _withCtx(() => [\n                        _createElementVNode(\"span\", null, _toDisplayString(_ctx.$t('settingModel')), 1)\n                      ]),\n                      default: _withCtx(() => [\n                        _createVNode(_component_el_select, {\n                          modelValue: webModel.value,\n                          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((webModel).value = $event)),\n                          size: \"small\",\n                          placeholder: _ctx.$t('settingModel'),\n                          onChange: handleWebModelChange\n                        }, {\n                          default: _withCtx(() => [\n                            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(webModelList), (item) => {\n                              return (_openBlock(), _createBlock(_component_el_option, {\n                                key: item.value,\n                                label: item.label,\n                                value: item.value\n                              }, null, 8, [\"label\", \"value\"]))\n                            }), 128))\n                          ]),\n                          _: 1\n                        }, 8, [\"modelValue\", \"placeholder\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                (api.value === 'official')\n                  ? (_openBlock(), _createBlock(_component_el_form_item, { key: 2 }, {\n                      label: _withCtx(() => [\n                        _createElementVNode(\"span\", null, _toDisplayString(_ctx.$t('apiKey')), 1)\n                      ]),\n                      default: _withCtx(() => [\n                        _createVNode(_component_el_input, {\n                          modelValue: apiKey.value,\n                          \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((apiKey).value = $event)),\n                          placeholder: _ctx.$t('apiKeyDescription'),\n                          size: \"small\",\n                          onBlur: handleApiKeyChange\n                        }, null, 8, [\"modelValue\", \"placeholder\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                (api.value === 'official')\n                  ? (_openBlock(), _createBlock(_component_el_form_item, { key: 3 }, {\n                      label: _withCtx(() => [\n                        _createElementVNode(\"span\", null, _toDisplayString(_ctx.$t('settingBasePath')), 1)\n                      ]),\n                      default: _withCtx(() => [\n                        _createVNode(_component_el_input, {\n                          modelValue: basePath.value,\n                          \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((basePath).value = $event)),\n                          placeholder: _ctx.$t('settingBasePath'),\n                          size: \"small\",\n                          onBlur: handleBasePathChange\n                        }, null, 8, [\"modelValue\", \"placeholder\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                (api.value === 'official')\n                  ? (_openBlock(), _createBlock(_component_el_form_item, { key: 4 }, {\n                      label: _withCtx(() => [\n                        _createElementVNode(\"span\", null, _toDisplayString(_ctx.$t('settingModel')), 1)\n                      ]),\n                      default: _withCtx(() => [\n                        _createVNode(_component_el_select, {\n                          modelValue: model.value,\n                          \"onUpdate:modelValue\": _cache[6] || (_cache[6] = ($event: any) => ((model).value = $event)),\n                          size: \"small\",\n                          placeholder: _ctx.$t('settingModel'),\n                          onChange: handleModelChange\n                        }, {\n                          default: _withCtx(() => [\n                            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(modelList), (item) => {\n                              return (_openBlock(), _createBlock(_component_el_option, {\n                                key: item.value,\n                                label: item.label,\n                                value: item.value\n                              }, null, 8, [\"label\", \"value\"]))\n                            }), 128))\n                          ]),\n                          _: 1\n                        }, 8, [\"modelValue\", \"placeholder\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                (api.value === 'official')\n                  ? (_openBlock(), _createBlock(_component_el_form_item, { key: 5 }, {\n                      label: _withCtx(() => [\n                        _createElementVNode(\"span\", null, _toDisplayString(_ctx.$t('settingTemperature')), 1)\n                      ]),\n                      default: _withCtx(() => [\n                        _createVNode(_component_el_input_number, {\n                          modelValue: temperature.value,\n                          \"onUpdate:modelValue\": _cache[7] || (_cache[7] = ($event: any) => ((temperature).value = $event)),\n                          min: 0,\n                          max: 2,\n                          step: 0.1,\n                          size: \"small\",\n                          onChange: handleTemperatureChange\n                        }, null, 8, [\"modelValue\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                (api.value === 'official')\n                  ? (_openBlock(), _createBlock(_component_el_form_item, { key: 6 }, {\n                      label: _withCtx(() => [\n                        _createElementVNode(\"span\", null, _toDisplayString(_ctx.$t('settingMaxTokens')), 1)\n                      ]),\n                      default: _withCtx(() => [\n                        _createVNode(_component_el_input_number, {\n                          modelValue: maxTokens.value,\n                          \"onUpdate:modelValue\": _cache[8] || (_cache[8] = ($event: any) => ((maxTokens).value = $event)),\n                          min: 1,\n                          step: 1,\n                          size: \"small\",\n                          onChange: handleMaxTokensChange\n                        }, null, 8, [\"modelValue\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                (api.value === 'azure')\n                  ? (_openBlock(), _createBlock(_component_el_form_item, { key: 7 }, {\n                      label: _withCtx(() => [\n                        _createElementVNode(\"span\", null, _toDisplayString(_ctx.$t('apiKey')), 1)\n                      ]),\n                      default: _withCtx(() => [\n                        _createVNode(_component_el_input, {\n                          modelValue: azureAPIKey.value,\n                          \"onUpdate:modelValue\": _cache[9] || (_cache[9] = ($event: any) => ((azureAPIKey).value = $event)),\n                          placeholder: _ctx.$t('apiKeyDescription'),\n                          size: \"small\",\n                          onBlur: handleAzureAPIKeyChange\n                        }, null, 8, [\"modelValue\", \"placeholder\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                (api.value === 'azure')\n                  ? (_openBlock(), _createBlock(_component_el_form_item, { key: 8 }, {\n                      label: _withCtx(() => [\n                        _createElementVNode(\"span\", null, _toDisplayString(_ctx.$t('settingAzureEndpoint')), 1)\n                      ]),\n                      default: _withCtx(() => [\n                        _createVNode(_component_el_input, {\n                          modelValue: azureAPIEndpoint.value,\n                          \"onUpdate:modelValue\": _cache[10] || (_cache[10] = ($event: any) => ((azureAPIEndpoint).value = $event)),\n                          placeholder: _ctx.$t('settingAzureEndpoint'),\n                          size: \"small\",\n                          onBlur: handleAzureAPIEndpointChange\n                        }, null, 8, [\"modelValue\", \"placeholder\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                (api.value === 'azure')\n                  ? (_openBlock(), _createBlock(_component_el_form_item, { key: 9 }, {\n                      label: _withCtx(() => [\n                        _createElementVNode(\"span\", null, _toDisplayString(_ctx.$t('settingAzureDeploymentName')), 1)\n                      ]),\n                      default: _withCtx(() => [\n                        _createVNode(_component_el_input, {\n                          modelValue: azureDeploymentName.value,\n                          \"onUpdate:modelValue\": _cache[11] || (_cache[11] = ($event: any) => ((azureDeploymentName).value = $event)),\n                          placeholder: _ctx.$t('settingAzureDeploymentName'),\n                          size: \"small\",\n                          onBlur: handleAzureDeploymentNameChange\n                        }, null, 8, [\"modelValue\", \"placeholder\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                (api.value === 'azure')\n                  ? (_openBlock(), _createBlock(_component_el_form_item, { key: 10 }, {\n                      label: _withCtx(() => [\n                        _createElementVNode(\"span\", null, _toDisplayString(_ctx.$t('settingTemperature')), 1)\n                      ]),\n                      default: _withCtx(() => [\n                        _createVNode(_component_el_input_number, {\n                          modelValue: azureTemperature.value,\n                          \"onUpdate:modelValue\": _cache[12] || (_cache[12] = ($event: any) => ((azureTemperature).value = $event)),\n                          min: 0,\n                          max: 2,\n                          step: 0.1,\n                          size: \"small\",\n                          onChange: handleAzureTemperatureChange\n                        }, null, 8, [\"modelValue\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                (api.value === 'azure')\n                  ? (_openBlock(), _createBlock(_component_el_form_item, { key: 11 }, {\n                      label: _withCtx(() => [\n                        _createElementVNode(\"span\", null, _toDisplayString(_ctx.$t('settingMaxTokens')), 1)\n                      ]),\n                      default: _withCtx(() => [\n                        _createVNode(_component_el_input_number, {\n                          modelValue: azureMaxTokens.value,\n                          \"onUpdate:modelValue\": _cache[13] || (_cache[13] = ($event: any) => ((azureMaxTokens).value = $event)),\n                          min: 1,\n                          step: 1,\n                          size: \"small\",\n                          onChange: handleAzureMaxTokensChange\n                        }, null, 8, [\"modelValue\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                (api.value === 'palm')\n                  ? (_openBlock(), _createBlock(_component_el_form_item, { key: 12 }, {\n                      label: _withCtx(() => [\n                        _createElementVNode(\"span\", null, _toDisplayString(_ctx.$t('apiKey')), 1)\n                      ]),\n                      default: _withCtx(() => [\n                        _createVNode(_component_el_input, {\n                          modelValue: palmAPIKey.value,\n                          \"onUpdate:modelValue\": _cache[14] || (_cache[14] = ($event: any) => ((palmAPIKey).value = $event)),\n                          placeholder: _ctx.$t('apiKeyDescription'),\n                          size: \"small\",\n                          onBlur: handlePalmAPIKeyChange\n                        }, null, 8, [\"modelValue\", \"placeholder\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                (api.value === 'palm')\n                  ? (_openBlock(), _createBlock(_component_el_form_item, { key: 13 }, {\n                      label: _withCtx(() => [\n                        _createElementVNode(\"span\", null, _toDisplayString(_ctx.$t('settingPalmEndpoint')), 1)\n                      ]),\n                      default: _withCtx(() => [\n                        _createVNode(_component_el_input, {\n                          modelValue: palmAPIEndpoint.value,\n                          \"onUpdate:modelValue\": _cache[15] || (_cache[15] = ($event: any) => ((palmAPIEndpoint).value = $event)),\n                          placeholder: _ctx.$t('settingPalmEndpoint'),\n                          size: \"small\",\n                          onBlur: handlePalmAPIEndpointChange\n                        }, null, 8, [\"modelValue\", \"placeholder\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                (api.value === 'palm')\n                  ? (_openBlock(), _createBlock(_component_el_form_item, { key: 14 }, {\n                      label: _withCtx(() => [\n                        _createElementVNode(\"span\", null, _toDisplayString(_ctx.$t('settingModel')), 1)\n                      ]),\n                      default: _withCtx(() => [\n                        _createVNode(_component_el_select, {\n                          modelValue: palmModel.value,\n                          \"onUpdate:modelValue\": _cache[16] || (_cache[16] = ($event: any) => ((palmModel).value = $event)),\n                          size: \"small\",\n                          placeholder: _ctx.$t('settingModel'),\n                          onChange: handlePalmModelChange\n                        }, {\n                          default: _withCtx(() => [\n                            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(palmModelList), (item) => {\n                              return (_openBlock(), _createBlock(_component_el_option, {\n                                key: item.value,\n                                label: item.label,\n                                value: item.value\n                              }, null, 8, [\"label\", \"value\"]))\n                            }), 128))\n                          ]),\n                          _: 1\n                        }, 8, [\"modelValue\", \"placeholder\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                (api.value === 'palm')\n                  ? (_openBlock(), _createBlock(_component_el_form_item, { key: 15 }, {\n                      label: _withCtx(() => [\n                        _createElementVNode(\"span\", null, _toDisplayString(_ctx.$t('settingTemperature')), 1)\n                      ]),\n                      default: _withCtx(() => [\n                        _createVNode(_component_el_input_number, {\n                          modelValue: palmTemperature.value,\n                          \"onUpdate:modelValue\": _cache[17] || (_cache[17] = ($event: any) => ((palmTemperature).value = $event)),\n                          min: 0,\n                          max: 2,\n                          step: 0.1,\n                          size: \"small\",\n                          onChange: handlePalmTemperatureChange\n                        }, null, 8, [\"modelValue\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                (api.value === 'palm')\n                  ? (_openBlock(), _createBlock(_component_el_form_item, { key: 16 }, {\n                      label: _withCtx(() => [\n                        _createElementVNode(\"span\", null, _toDisplayString(_ctx.$t('settingMaxTokens')), 1)\n                      ]),\n                      default: _withCtx(() => [\n                        _createVNode(_component_el_input_number, {\n                          modelValue: palmMaxTokens.value,\n                          \"onUpdate:modelValue\": _cache[18] || (_cache[18] = ($event: any) => ((palmMaxTokens).value = $event)),\n                          min: 1,\n                          step: 1,\n                          size: \"small\",\n                          onChange: handlePalmMaxTokensChange\n                        }, null, 8, [\"modelValue\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                (api.value === 'gemini')\n                  ? (_openBlock(), _createBlock(_component_el_form_item, { key: 17 }, {\n                      label: _withCtx(() => [\n                        _createElementVNode(\"span\", null, _toDisplayString(_ctx.$t('apiKey')), 1)\n                      ]),\n                      default: _withCtx(() => [\n                        _createVNode(_component_el_input, {\n                          modelValue: geminiAPIKey.value,\n                          \"onUpdate:modelValue\": _cache[19] || (_cache[19] = ($event: any) => ((geminiAPIKey).value = $event)),\n                          placeholder: _ctx.$t('apiKeyDescription'),\n                          size: \"small\",\n                          onBlur: handleGeminiAPIKeyChange\n                        }, null, 8, [\"modelValue\", \"placeholder\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                (api.value === 'gemini')\n                  ? (_openBlock(), _createBlock(_component_el_form_item, { key: 18 }, {\n                      label: _withCtx(() => [\n                        _createElementVNode(\"span\", null, _toDisplayString(_ctx.$t('settingTemperature')), 1)\n                      ]),\n                      default: _withCtx(() => [\n                        _createVNode(_component_el_input_number, {\n                          modelValue: geminiTemperature.value,\n                          \"onUpdate:modelValue\": _cache[20] || (_cache[20] = ($event: any) => ((geminiTemperature).value = $event)),\n                          min: 0,\n                          max: 1,\n                          step: 0.1,\n                          size: \"small\",\n                          onChange: handleGeminiTemperatureChange\n                        }, null, 8, [\"modelValue\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                (api.value === 'gemini')\n                  ? (_openBlock(), _createBlock(_component_el_form_item, { key: 19 }, {\n                      label: _withCtx(() => [\n                        _createElementVNode(\"span\", null, _toDisplayString(_ctx.$t('settingMaxTokens')), 1)\n                      ]),\n                      default: _withCtx(() => [\n                        _createVNode(_component_el_input_number, {\n                          modelValue: geminiMaxTokens.value,\n                          \"onUpdate:modelValue\": _cache[21] || (_cache[21] = ($event: any) => ((geminiMaxTokens).value = $event)),\n                          min: 1,\n                          step: 1,\n                          size: \"small\",\n                          onChange: handleGeminiMaxTokensChange\n                        }, null, 8, [\"modelValue\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                (api.value === 'gemini')\n                  ? (_openBlock(), _createBlock(_component_el_form_item, { key: 20 }, {\n                      label: _withCtx(() => [\n                        _createElementVNode(\"span\", null, _toDisplayString(_ctx.$t('settingModel')), 1)\n                      ]),\n                      default: _withCtx(() => [\n                        _createVNode(_component_el_select, {\n                          modelValue: geminiModel.value,\n                          \"onUpdate:modelValue\": _cache[22] || (_cache[22] = ($event: any) => ((geminiModel).value = $event)),\n                          size: \"small\",\n                          placeholder: _ctx.$t('settingModel'),\n                          onChange: handleGeminiModelChange\n                        }, {\n                          default: _withCtx(() => [\n                            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(geminiModelList), (item) => {\n                              return (_openBlock(), _createBlock(_component_el_option, {\n                                key: item.value,\n                                label: item.label,\n                                value: item.value\n                              }, null, 8, [\"label\", \"value\"]))\n                            }), 128))\n                          ]),\n                          _: 1\n                        }, 8, [\"modelValue\", \"placeholder\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                (api.value === 'ollama')\n                  ? (_openBlock(), _createBlock(_component_el_form_item, { key: 21 }, {\n                      label: _withCtx(() => [\n                        _createElementVNode(\"span\", null, _toDisplayString(_ctx.$t('settingOllamaEndpoint')), 1)\n                      ]),\n                      default: _withCtx(() => [\n                        _createVNode(_component_el_input, {\n                          modelValue: ollamaEndpoint.value,\n                          \"onUpdate:modelValue\": _cache[23] || (_cache[23] = ($event: any) => ((ollamaEndpoint).value = $event)),\n                          placeholder: _ctx.$t('settingOllamaEndpoint'),\n                          size: \"small\",\n                          onBlur: handleOllamaEndpointChange\n                        }, null, 8, [\"modelValue\", \"placeholder\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                (api.value === 'ollama')\n                  ? (_openBlock(), _createBlock(_component_el_form_item, { key: 22 }, {\n                      label: _withCtx(() => [\n                        _createElementVNode(\"span\", null, _toDisplayString(_ctx.$t('settingModel')), 1)\n                      ]),\n                      default: _withCtx(() => [\n                        _createVNode(_component_el_select, {\n                          modelValue: ollamaModel.value,\n                          \"onUpdate:modelValue\": _cache[24] || (_cache[24] = ($event: any) => ((ollamaModel).value = $event)),\n                          size: \"small\",\n                          placeholder: _ctx.$t('settingModel'),\n                          onChange: handleOllamaModelChange\n                        }, {\n                          default: _withCtx(() => [\n                            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(ollamaModelList), (item) => {\n                              return (_openBlock(), _createBlock(_component_el_option, {\n                                key: item.value,\n                                label: item.label,\n                                value: item.value\n                              }, null, 8, [\"label\", \"value\"]))\n                            }), 128))\n                          ]),\n                          _: 1\n                        }, 8, [\"modelValue\", \"placeholder\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                (api.value === 'ollama')\n                  ? (_openBlock(), _createBlock(_component_el_form_item, { key: 23 }, {\n                      label: _withCtx(() => [\n                        _createElementVNode(\"span\", null, _toDisplayString(_ctx.$t('settingTemperature')), 1)\n                      ]),\n                      default: _withCtx(() => [\n                        _createVNode(_component_el_input_number, {\n                          modelValue: ollamaTemperature.value,\n                          \"onUpdate:modelValue\": _cache[25] || (_cache[25] = ($event: any) => ((ollamaTemperature).value = $event)),\n                          min: 0,\n                          max: 1,\n                          step: 0.1,\n                          size: \"small\",\n                          onChange: handleOllamaTemperatureChange\n                        }, null, 8, [\"modelValue\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                _createVNode(_component_el_form_item, null, {\n                  label: _withCtx(() => [\n                    _createElementVNode(\"span\", null, _toDisplayString(_ctx.$t('settingReplyLanguage')), 1)\n                  ]),\n                  default: _withCtx(() => [\n                    _createVNode(_component_el_select, {\n                      modelValue: replyLanguage.value,\n                      \"onUpdate:modelValue\": _cache[26] || (_cache[26] = ($event: any) => ((replyLanguage).value = $event)),\n                      size: \"small\",\n                      placeholder: _ctx.$t('settingReplyLanguage'),\n                      onChange: handleReplyLanguageChange\n                    }, {\n                      default: _withCtx(() => [\n                        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(replyLanguageList), (item) => {\n                          return (_openBlock(), _createBlock(_component_el_option, {\n                            key: item.value,\n                            label: item.label,\n                            value: item.value\n                          }, null, 8, [\"label\", \"value\"]))\n                        }), 128))\n                      ]),\n                      _: 1\n                    }, 8, [\"modelValue\", \"placeholder\"])\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ]))\n}\n}\n\n})","import script from \"./SettingsPage.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./SettingsPage.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./SettingsPage.vue?vue&type=style&index=0&id=862c8868&lang=stylus\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["checkAuth","auth","type","accessToken","apiKey","azureAPIKey","palmAPIKey","geminiAPIKey","forceNumber","val","isNaN","Number","languageMap","en","es","fr","de","it","pt","hi","ar","ja","ko","ru","nl","sv","fi","no","da","pl","tr","el","he","hu","id","ms","th","vi","uk","bg","cs","ro","sk","sl","hr","sr","bn","gu","kn","mr","ta","te","ur","availableModels","gtp4","availableModelsForPlus","default","availableModelsForPalm","availableModelsForGemini","availableModelsForOllama","llama3","llama2","phi3","wizardlm2","mistral","qwen","codegemma","llava","codellama","yi","codeqwen","phi","vicuna","localStorageKey","buildInPrompt","translate","system","language","user","text","polish","academic","summary","grammar","_hoisted_1","_defineComponent","__name","setup","__props","router","useRouter","languageList","label","value","replyLanguageList","Object","values","map","key","modelList","keys","palmModelList","geminiModelList","ollamaModelList","api","ref","currentUILanguage","replyLanguage","webModel","model","temperature","maxTokens","basePath","azureAPIEndpoint","azureDeploymentName","azureMaxTokens","azureTemperature","palmAPIEndpoint","palmModel","palmTemperature","palmMaxTokens","geminiModel","geminiTemperature","geminiMaxTokens","ollamaEndpoint","ollamaModel","ollamaTemperature","apiList","locale","useI18n","initData","localStorage","getItem","localLanguage","modelTemp","includes","palmModelTemp","geminiModelTemp","ollamaModelTemp","handleApiChange","setItem","handleLocalLanguageChange","handleReplyLanguageChange","handleModelChange","handleApiKeyChange","handleAccessTokenChange","handleBasePathChange","handleTemperatureChange","toString","handleMaxTokensChange","handleAzureAPIKeyChange","handleAzureAPIEndpointChange","handleAzureDeploymentNameChange","handleAzureMaxTokensChange","handleAzureTemperatureChange","handlePalmAPIKeyChange","handlePalmAPIEndpointChange","handlePalmMaxTokensChange","handlePalmTemperatureChange","handlePalmModelChange","handleGeminiAPIKeyChange","handleGeminiMaxTokensChange","handleGeminiTemperatureChange","handleGeminiModelChange","handleOllamaEndpointChange","handleOllamaModelChange","handleOllamaTemperatureChange","backToHome","push","onBeforeMount","_ctx","_cache","_component_el_row","_resolveComponent","_component_el_col","_component_el_button","_component_el_option","_component_el_select","_component_el_form_item","_component_el_input","_component_el_input_number","_component_el_form","_openBlock","_createElementBlock","_createVNode","class","align","justify","style","_withCtx","_createTextVNode","_toDisplayString","$t","_","span","offset","round","plain","onClick","size","_createElementVNode","modelValue","$event","placeholder","onChange","_Fragment","_renderList","item","_createBlock","clearable","onBlur","_createCommentVNode","_unref","min","max","step","__exports__"],"sourceRoot":""}